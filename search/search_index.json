{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Sommaire/","title":"Sommaire","text":"<p>I) Introduction \u00e0 Kubernetes</p> <p>Introduction au principaux objets Kubernetes</p> <p>Les fondamentaux sur les objets Kubernetes</p> <p>Projet 1 utiliser des images personnalis\u00e9es avec k8s localement</p> <p>Introduction aux Ingress</p> <p>Projet 2 Premier cluster (DOKS)</p> <p>Les Sondes (probs)</p> <p>Gestion des Ressources</p> <p>Introduction \u00e0 la persistance</p> <p>Projet 3 PV PVC et StatefulSet NGINX PHP MySQL DOKS et AKS</p> <p>Gestion des configurations</p> <p>Projet 4 ConfigMap et Secret (AKS)</p> <p>Ordonnancement avanc\u00e9 des Pods et des Nodes</p> <p>Logging et Monitoring avec Kubernetes</p> <p>Utilisation de TLS avec Kubernetes</p> <p>Les t\u00e2ches avec Kubernetes</p> <p>Introduction \u00e0 Helm</p> <p>Projet 5 Projet complet GKE</p> <p>GitOps avec Argo CD (GKE)</p>"},{"location":"Chap_1_Introduction_Kubernetes/I_Introduction_%C3%A0_Kubernetes/","title":"I Introduction \u00e0 Kubernetes","text":"<p>[[a) Introduction \u00e0 la Stack DevOps]]</p> <p>Introduction \u00e0 la Stack DevOps</p> <p> Qu'est ce que Kubernetes</p> <p>[[c) L'architecture de Kubernetes]]</p> <p>[[d) Explication de l'environnement et mise en place sur Linux]]</p> <p>[[e) Pr\u00e9sentation du dashboard Minikube et Kubectl]]</p>"},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/","title":"a Introduction \u00e0 la Stack DevOps","text":"","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#quest-ce-que-le-devops","title":"Qu'est-ce que le DevOps ?","text":"<p>Le DevOps est une philosophie et un ensemble de pratiques visant \u00e0 am\u00e9liorer la collaboration entre le d\u00e9veloppement logiciel (Dev) et les op\u00e9rations informatiques (Ops). Ce terme a \u00e9t\u00e9 invent\u00e9 en 2007 par Patrick Debois, un ing\u00e9nieur belge.</p>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#objectifs-principaux-du-devops","title":"Objectifs principaux du DevOps","text":"<ol> <li>Favoriser la collaboration :<ul> <li>Supprimer les barri\u00e8res entre les \u00e9quipes de d\u00e9veloppement et d'exploitation.</li> </ul> </li> <li>Am\u00e9liorer la rapidit\u00e9 :<ul> <li>Acc\u00e9l\u00e9rer la livraison des logiciels gr\u00e2ce \u00e0 l'automatisation et aux pipelines CI/CD.</li> </ul> </li> <li>Augmenter la qualit\u00e9 :<ul> <li>Int\u00e9gration de tests automatis\u00e9s et surveillance continue pour pr\u00e9venir les erreurs en production.</li> </ul> </li> <li>Am\u00e9liorer la r\u00e9silience :<ul> <li>Monitoring proactif et feedback constant pour une am\u00e9lioration continue.</li> </ul> </li> </ol>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#principes-cles-du-devops","title":"Principes cl\u00e9s du DevOps","text":"<ol> <li> <p>Int\u00e9gration continue (CI) :</p> <ul> <li>Les d\u00e9veloppeurs int\u00e8grent fr\u00e9quemment leur code dans un d\u00e9p\u00f4t partag\u00e9, avec tests automatiques pour d\u00e9tecter rapidement les probl\u00e8mes.</li> <li> <p>Livraison continue (CD) :</p> </li> <li> <p>Les modifications valid\u00e9es sont automatiquement d\u00e9ploy\u00e9es dans des environnements interm\u00e9diaires ou de production.</p> </li> <li> <p>Infrastructure as Code (IaC) :</p> </li> <li> <p>Gestion de l'infrastructure via des fichiers de configuration, permettant une r\u00e9plication et une mise \u00e0 l'\u00e9chelle rapides.</p> </li> <li> <p>Surveillance et journalisation :</p> </li> <li> <p>Analyse continue des performances des applications et des infrastructures pour d\u00e9tecter et corriger les anomalies.</p> </li> <li> <p>Culture de la r\u00e9troaction :</p> </li> <li> <p>Encouragement \u00e0 collecter les retours d\u2019exp\u00e9rience pour am\u00e9liorer les processus.</p> </li> </ul> </li> </ol>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#outils-devops","title":"Outils DevOps","text":"","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#1-planification-et-collaboration","title":"1. Planification et collaboration","text":"<ul> <li>Objectif : Gestion des projets et suivi des t\u00e2ches.</li> <li>Outils principaux :<ul> <li>GitLab</li> <li>GitHub</li> <li>Jira</li> </ul> </li> </ul>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#2-gestion-du-code-controle-de-version","title":"2. Gestion du code (Contr\u00f4le de version)","text":"<ul> <li>Objectif : Versionner le code pour faciliter la collaboration et \u00e9viter les conflits.</li> <li>Outils principaux :<ul> <li>GitHub</li> <li>GitLab</li> <li>Bitbucket</li> </ul> </li> </ul>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#3-integration-continue-deploiement-continu-cicd","title":"3. Int\u00e9gration continue / D\u00e9ploiement continu (CI/CD)","text":"<ul> <li>Objectif : Automatiser le pipeline de d\u00e9veloppement (build, test, d\u00e9ploiement).</li> <li>Outils principaux :<ul> <li>Jenkins</li> <li>GitLab CI/CD</li> <li>GitHub Actions</li> <li>CircleCI</li> <li>Travis CI</li> </ul> </li> </ul>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#4-gestion-de-linfrastructure","title":"4. Gestion de l'infrastructure","text":"<ul> <li>Objectif : Automatiser la configuration et l'orchestration des serveurs et clusters.</li> <li>Outils principaux :<ul> <li>Docker : Conteneurisation des applications.</li> <li>Kubernetes : Orchestration des conteneurs.</li> <li>Terraform : Provisionnement d'infrastructure via IaC.</li> <li>Ansible : Gestion de configuration des serveurs.</li> </ul> </li> </ul>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#5-surveillance-et-retour-dinformation","title":"5. Surveillance et retour d'information","text":"<ul> <li>Objectif : Suivre les performances et d\u00e9tecter les probl\u00e8mes en temps r\u00e9el.</li> <li>Outils principaux :<ul> <li>Prometheus : Monitoring des m\u00e9triques.</li> <li>Grafana : Visualisation des donn\u00e9es et cr\u00e9ation de tableaux de bord.</li> <li>ELK Stack (Elasticsearch, Logstash, Kibana) : Analyse et visualisation des logs.</li> <li>Autres : Datadog, Nagios, New Relic, Sentry.</li> </ul> </li> </ul>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#schema-classique-du-devops","title":"Sch\u00e9ma classique du DevOps","text":"<p>![[DevOps.png]] (Ins\u00e9rez ici l'image si utilis\u00e9e dans Obsidian)</p>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#avantages-du-devops","title":"Avantages du DevOps","text":"<ol> <li>Livraisons plus rapides :<ul> <li>R\u00e9duction du temps entre le d\u00e9veloppement et le d\u00e9ploiement.</li> </ul> </li> <li>Qualit\u00e9 logicielle accrue :<ul> <li>Tests automatis\u00e9s et int\u00e9gration continue.</li> </ul> </li> <li>Meilleure collaboration :<ul> <li>Suppression des silos entre \u00e9quipes Dev et Ops.</li> </ul> </li> <li>R\u00e9silience am\u00e9lior\u00e9e :<ul> <li>D\u00e9tection et correction rapide des anomalies gr\u00e2ce \u00e0 un monitoring en temps r\u00e9el.</li> </ul> </li> <li>R\u00e9duction des co\u00fbts :<ul> <li>Automatisation des t\u00e2ches r\u00e9p\u00e9titives et gestion simplifi\u00e9e des infrastructures.</li> </ul> </li> </ol>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/a_Introduction_%C3%A0_la_Stack_DevOps/#resume","title":"R\u00e9sum\u00e9","text":"<p>Le DevOps est une m\u00e9thodologie moderne combinant outils, processus, et culture pour livrer des logiciels de mani\u00e8re rapide, fiable, et avec une meilleure qualit\u00e9. En utilisant des outils comme GitLab, Docker, ou Kubernetes, et en adoptant des pratiques comme CI/CD, les entreprises peuvent am\u00e9liorer la collaboration entre les \u00e9quipes et r\u00e9pondre rapidement aux besoins du march\u00e9.</p>","tags":["#Intro_Kub/Stack_DevOps"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/","title":"b Qu'est ce que Kubernetes","text":"","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#quest-ce-que-kubernetes","title":"Qu'est ce que Kubernetes ?","text":"<p>Kubernetes, souvent abr\u00e9g\u00e9 en K8s (un num\u00e9ronyme o\u00f9 8 repr\u00e9sente les lettres entre \"K\" et \"s\", comme i18n pour internationalisation), est une plateforme open-source \u00e9crite en Go, utilis\u00e9e pour l'orchestration de conteneurs. Il permet de d\u00e9ployer, g\u00e9rer et superviser des applications conteneuris\u00e9es \u00e0 grande \u00e9chelle.</p> <ul> <li>Origines : Con\u00e7u par Google, Kubernetes s'inspire de leur syst\u00e8me interne appel\u00e9 Borg. Open-sourc\u00e9 en 2014, il est aujourd\u2019hui soutenu par la Cloud Native Computing Foundation (CNCF), une organisation d\u00e9pendante de la Fondation Linux, comptant plus de 700 membres (Google, Microsoft, Amazon, Apple, IBM, etc.).</li> <li>\u00c9tymologie : Son nom provient du grec ancien \u03ba\u03c5\u03b2\u03b5\u03c1\u03bd\u03ae\u03c4\u03b7\u03c2 (kubernetes), qui signifie \"pilote\" ou \"capitaine\", refl\u00e9tant son r\u00f4le de gestionnaire dans un environnement distribu\u00e9.</li> <li>Surnom : Certains qualifient Kubernetes de \"syst\u00e8me d\u2019exploitation du cloud\" pour sa capacit\u00e9 \u00e0 automatiser et g\u00e9rer des d\u00e9ploiements applicatifs dans des environnements complexes.</li> </ul>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#principales-fonctionnalites-de-kubernetes","title":"Principales fonctionnalit\u00e9s de Kubernetes","text":"<ol> <li> <p>Orchestration avanc\u00e9e :</p> <ul> <li>Gestion de l'\u00e9tat des applications (de l'\u00e9tat actuel vers l'\u00e9tat d\u00e9sir\u00e9).</li> <li>Automatisation des d\u00e9ploiements avec prise en charge des rolling updates et rollback.</li> <li> <p>Portabilit\u00e9 :</p> </li> <li> <p>Support des d\u00e9ploiements sur des machines locales, dans des clouds publics, hybrides ou multi-clouds.</p> </li> <li> <p>Service Discovery &amp; Load Balancing :</p> </li> <li> <p>Fournit des adresses IP ou DNS pour les conteneurs.</p> </li> <li>G\u00e8re l'\u00e9quilibrage de charge pour un trafic r\u00e9seau \u00e9lev\u00e9.</li> <li> <p>Gestion du stockage :</p> </li> <li> <p>Int\u00e9gration avec des syst\u00e8mes de stockage vari\u00e9s : local, cloud public (GCP, AWS, Azure), ou r\u00e9seaux de stockage (NFS, Ceph, etc.).</p> </li> <li> <p>Surveillance et auto-r\u00e9paration :</p> </li> <li> <p>Red\u00e9marrage automatique des conteneurs d\u00e9faillants.</p> </li> <li>Remplacement ou arr\u00eat des conteneurs non conformes aux health checks.</li> <li> <p>Gestion des secrets et de la configuration :</p> </li> <li> <p>Mise \u00e0 jour des configurations sans reconstruire les conteneurs ni exposer les secrets.</p> </li> </ul> </li> </ol>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#pourquoi-utiliser-kubernetes","title":"Pourquoi utiliser Kubernetes ?","text":"<ul> <li>Automatisation : Simplifie la gestion des applications conteneuris\u00e9es en automatisant leur d\u00e9ploiement, mise \u00e0 l'\u00e9chelle, et maintenance.</li> <li>\u00c9volutivit\u00e9 : Ajuste dynamiquement les ressources selon la demande gr\u00e2ce \u00e0 l'auto-scaling.</li> <li>R\u00e9silience : Assure la haute disponibilit\u00e9 des services avec des m\u00e9canismes d\u2019auto-gu\u00e9rison.</li> <li>Interop\u00e9rabilit\u00e9 : Permet un d\u00e9ploiement coh\u00e9rent entre d\u00e9veloppement, tests et production.</li> </ul>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#services-manages-kubernetes","title":"Services manag\u00e9s Kubernetes","text":"<p>De nombreux fournisseurs cloud proposent des services Kubernetes manag\u00e9s. Ces plateformes simplifient l'utilisation de Kubernetes en prenant en charge les t\u00e2ches li\u00e9es \u00e0 l'infrastructure (installation, maintenance, mises \u00e0 jour, etc.).</p>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#principaux-services-manages","title":"Principaux services manag\u00e9s :","text":"<ul> <li>Google Kubernetes Engine (GKE) : Int\u00e9gration native avec Google Cloud.</li> <li>Amazon Elastic Kubernetes Service (EKS) : S\u2019int\u00e8gre avec des services AWS comme ELB et RDS.</li> <li>Azure Kubernetes Service (AKS) : Li\u00e9 \u00e0 Azure DevOps et Azure Monitor.</li> <li>IBM Cloud Kubernetes Service : Connect\u00e9 aux services d'IBM Cloud, comme Watson.</li> <li>DigitalOcean Kubernetes (DOKS) : Offre simple et efficace pour les d\u00e9veloppeurs.</li> <li>Red Hat OpenShift : Bas\u00e9 sur Kubernetes, avec des fonctionnalit\u00e9s avanc\u00e9es (registre d'images int\u00e9gr\u00e9, outils de CI/CD).</li> <li>OVH Managed Kubernetes : Service de Kubernetes manag\u00e9 par OVHcloud.</li> <li>Scaleway Kubernetes Kapsule : Service manag\u00e9 avec focus sur la simplicit\u00e9.</li> <li>Scaleway Kubernetes Kosmos : Permet d'exploiter des ressources multi-cloud.</li> </ul>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/b_Qu%27est_ce_que_Kubernetes/#alternative-notable","title":"Alternative notable :","text":"<ul> <li>Anthos de Google : Fonctionne sur le principe du multi-cloud et hybride.</li> </ul> <p>En r\u00e9sum\u00e9, Kubernetes a r\u00e9volutionn\u00e9 le monde des applications modernes gr\u00e2ce \u00e0 sa capacit\u00e9 \u00e0 simplifier l\u2019orchestration de conteneurs, \u00e0 offrir une grande r\u00e9silience et \u00e0 s\u2019int\u00e9grer facilement dans des environnements vari\u00e9s. Sa popularit\u00e9 repose sur une communaut\u00e9 active et un \u00e9cosyst\u00e8me robuste soutenu par les plus grands acteurs de l'industrie.</p>","tags":["#Intro_Kub/Qu_est_ce_que_K8s"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/","title":"c L'architecture de Kubernetes","text":"","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/#architecture-generale-de-kubernetes","title":"Architecture g\u00e9n\u00e9rale de Kubernetes","text":"<p>Kubernetes est structur\u00e9 autour d'un cluster compos\u00e9 de diff\u00e9rents n\u0153uds (nodes). Chaque n\u0153ud est une machine physique ou virtuelle sur laquelle les composants Kubernetes sont install\u00e9s. Ces n\u0153uds sont class\u00e9s en deux types principaux :</p> <ul> <li> <p>N\u0153ud de contr\u00f4le (Control Node ou Control Plane) :</p> <ul> <li>Responsable de la gestion et de l'orchestration de l'ensemble du cluster.</li> <li>Supervise les n\u0153uds de travail.</li> <li>Peut \u00eatre d\u00e9ploy\u00e9 en une instance unique ou en plusieurs instances pour la haute disponibilit\u00e9.</li> <li> <p>N\u0153uds de travail (Worker Nodes) :</p> </li> <li> <p>H\u00e9bergent les Pods, qui sont les unit\u00e9s de base dans Kubernetes. Chaque Pod contient un ou plusieurs conteneurs.</p> </li> <li>G\u00e8rent l'ex\u00e9cution des applications.</li> </ul> </li> </ul> <p>![[Archi1.png]] (Sch\u00e9ma repr\u00e9sentant l'architecture d\u2019un cluster Kubernetes.)</p>","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/#composants-de-kubernetes","title":"Composants de Kubernetes","text":"<p>La plateforme est divis\u00e9e en deux grandes cat\u00e9gories de composants : les composants de contr\u00f4le (pour la gestion du cluster) et les composants des n\u0153uds de travail (pour ex\u00e9cuter les applications).</p>","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/#composants-du-plan-de-controle-control-plane","title":"Composants du plan de contr\u00f4le (Control Plane)","text":"<ol> <li> <p>kube-apiserver :</p> <ul> <li>Le point d'entr\u00e9e pour interagir avec Kubernetes.</li> <li>Expose l'API REST utilis\u00e9e par les administrateurs, les outils d'automatisation et d'autres composants Kubernetes.</li> <li> <p>etcd :</p> </li> <li> <p>Base de donn\u00e9es cl\u00e9-valeur distribu\u00e9e et r\u00e9siliente.</p> </li> <li>Stocke toutes les donn\u00e9es de configuration et l'\u00e9tat du cluster.</li> <li>\u00c9l\u00e9ment critique pour le fonctionnement du cluster.</li> <li> <p>kube-scheduler :</p> </li> <li> <p>Composant charg\u00e9 d'assigner les Pods \u00e0 des n\u0153uds de travail.</p> </li> <li>Prend des d\u00e9cisions bas\u00e9es sur des crit\u00e8res comme la capacit\u00e9 des n\u0153uds, les contraintes de ressources ou l'affinit\u00e9 de d\u00e9ploiement.</li> <li> <p>kube-controller-manager :</p> </li> <li> <p>Composant regroupant plusieurs contr\u00f4leurs, chacun \u00e9tant responsable d\u2019un aspect sp\u00e9cifique du cluster.</p> <ul> <li>Node Controller : Supervise la disponibilit\u00e9 des n\u0153uds et r\u00e9agit en cas de panne.</li> <li>Replication Controller : Maintient le nombre souhait\u00e9 de Pods en cours d'ex\u00e9cution.</li> <li>Endpoints Controller : Lie les services aux Pods correspondants.</li> <li>Service Account &amp; Token Controllers : Cr\u00e9e des comptes par d\u00e9faut et des jetons pour les namespaces.</li> </ul> </li> <li> <p>cloud-controller-manager (optionnel, utilis\u00e9 pour les clusters d\u00e9ploy\u00e9s sur un cloud) :</p> </li> <li> <p>Interagit avec l'API du fournisseur cloud pour g\u00e9rer les ressources externes.</p> </li> <li>Exemple de contr\u00f4leurs sp\u00e9cifiques au cloud :<ul> <li>Node Controller : V\u00e9rifie si un n\u0153ud supprim\u00e9 dans le cloud est bien retir\u00e9 du cluster.</li> <li>Route Controller : Configure les routes r\u00e9seau sur le cloud.</li> <li>Service Controller : G\u00e8re les \u00e9quilibreurs de charge.</li> <li>Volume Controller : Administre les volumes de stockage.</li> </ul> </li> </ul> </li> </ol>","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/#composants-des-nuds-de-travail","title":"Composants des n\u0153uds de travail","text":"<p>Ces composants s'ex\u00e9cutent sur chaque n\u0153ud de travail pour maintenir l'ex\u00e9cution des Pods et permettre leur communication r\u00e9seau.</p> <ol> <li> <p>kubelet :</p> <ul> <li>Agent principal ex\u00e9cut\u00e9 sur chaque n\u0153ud.</li> <li>S'assure que les conteneurs dans les Pods sont d\u00e9marr\u00e9s, sains et conformes aux sp\u00e9cifications.</li> <li> <p>kube-proxy :</p> </li> <li> <p>G\u00e8re les r\u00e8gles r\u00e9seau sur chaque n\u0153ud.</p> </li> <li>Assure la communication entre les Pods et avec les clients externes via des proxys et des routages dynamiques.</li> <li> <p>Runtime des conteneurs (Container Runtime) :</p> </li> <li> <p>Moteur responsable de l'ex\u00e9cution des conteneurs.</p> </li> <li>Exemples : Docker (anciennement utilis\u00e9), containerd, CRI-O.</li> </ul> </li> </ol> <p>![[Archi.png]] (Sch\u00e9ma des composants Kubernetes dans un cluster.)</p>","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/c_L%27architecture_de_Kubernetes/#resume-des-roles-des-composants","title":"R\u00e9sum\u00e9 des r\u00f4les des composants","text":"Composant R\u00f4le principal kube-apiserver Point d'entr\u00e9e API pour l'administration et l'interaction avec Kubernetes. etcd Stocke l'\u00e9tat et la configuration du cluster. kube-scheduler Planifie les Pods sur les n\u0153uds disponibles. kube-controller-manager Supervise et maintient les diff\u00e9rents aspects du cluster (n\u0153uds, Pods, services, comptes). cloud-controller-manager G\u00e8re l'int\u00e9gration avec les fournisseurs de cloud (pour les clusters cloud). kubelet Assure l'ex\u00e9cution et la sant\u00e9 des Pods sur les n\u0153uds. kube-proxy G\u00e8re la connectivit\u00e9 r\u00e9seau et la r\u00e9partition de charge entre Pods et services. Runtime des conteneurs Ex\u00e9cute les conteneurs dans les Pods (par exemple : containerd, CRI-O). <p>En bref, l\u2019architecture de Kubernetes est con\u00e7ue pour \u00eatre modulaire, r\u00e9siliente et adapt\u00e9e aux environnements distribu\u00e9s. Chaque composant joue un r\u00f4le essentiel pour garantir que les applications s'ex\u00e9cutent de mani\u00e8re fiable, m\u00eame \u00e0 grande \u00e9chelle.</p>","tags":["#Intro_Kub/Archi_de_Kub"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/","title":"d Explication de l'environnement et mise en place sur Linux","text":"","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#quest-ce-que-minikube","title":"Qu'est-ce que Minikube ?","text":"<p>Minikube est un outil con\u00e7u pour ex\u00e9cuter un cluster Kubernetes local sur votre machine. Il est principalement destin\u00e9 au d\u00e9veloppement et aux tests, permettant aux d\u00e9veloppeurs de travailler sur Kubernetes sans avoir besoin d'un cluster distant.</p> <ul> <li> <p>Fonctionnalit\u00e9s principales :</p> <ul> <li>Configure une machine virtuelle ou utilise Docker pour ex\u00e9cuter Kubernetes localement.</li> <li>Compatible avec les syst\u00e8mes d'exploitation Linux, macOS et Windows.</li> <li>Inclut des fonctionnalit\u00e9s Kubernetes courantes telles que :<ul> <li>DNS</li> <li>NodePorts</li> <li>ConfigMaps</li> <li>Secrets</li> </ul> </li> <li>Origine : D\u00e9velopp\u00e9 par la communaut\u00e9 Kubernetes (avec une contribution significative de Google).</li> </ul> </li> <li> <p>Utilisation principale : D\u00e9veloppement et tests locaux.</p> </li> <li> <p>Alternatives :</p> <ul> <li>kind (Kubernetes IN Docker)</li> <li>k3s (une version all\u00e9g\u00e9e de Kubernetes)</li> </ul> </li> </ul>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#le-cli-kubectl","title":"Le CLI kubectl","text":"<p>kubectl (prononc\u00e9 \"cube control\") est l'outil en ligne de commande officiel pour interagir avec Kubernetes. Il sert de client pour communiquer avec le cluster en utilisant l'API Kubernetes.</p> <ul> <li> <p>Fonctionnement :</p> <ul> <li>Traduit des commandes en ligne ou des configurations YAML en requ\u00eates HTTP.</li> <li>Ces requ\u00eates sont envoy\u00e9es au serveur Kubernetes avec les donn\u00e9es n\u00e9cessaires au format JSON.</li> <li> <p>Principales t\u00e2ches r\u00e9alisables avec kubectl :</p> </li> <li> <p>Gestion des ressources : Cr\u00e9er, mettre \u00e0 jour, supprimer des Pods, Services, Deployments, etc.</p> </li> <li>Consultation d'\u00e9tat : Obtenir les d\u00e9tails et le statut des ressources Kubernetes.</li> <li>Gestion r\u00e9seau et stockage : Configurer et superviser les volumes et r\u00e9seaux du cluster.</li> <li>Interactivit\u00e9 : Ex\u00e9cuter des commandes \u00e0 l'int\u00e9rieur des conteneurs d'un Pod.</li> <li>D\u00e9bogage : Analyser les journaux des Pods et r\u00e9soudre les probl\u00e8mes du cluster.</li> </ul> </li> </ul>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#installation-de-minikube","title":"Installation de Minikube","text":"<p>Pr\u00e9requis minimaux :</p> <ul> <li>2 CPU</li> <li>4 Go de RAM libre</li> <li>20 Go d\u2019espace disque</li> <li>Gestionnaire de machine virtuelle ou de conteneurs (par exemple Docker)</li> </ul> <p>Installation sur Linux :</p> <ol> <li> <p>T\u00e9l\u00e9chargez le binaire :</p> <p>bash</p> <p><code>curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</code></p> </li> <li> <p>Installez-le :</p> <p>bash</p> <p><code>sudo install minikube-linux-amd64 /usr/local/bin/minikube</code></p> </li> </ol>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#lancement-dun-cluster-avec-minikube","title":"Lancement d\u2019un cluster avec Minikube","text":"<ol> <li>Lancez Docker Desktop pour fournir un environnement de conteneur.</li> <li> <p>Configurez Minikube pour utiliser Docker comme pilote :</p> <p>bash</p> <p><code>minikube config set driver docker</code></p> </li> <li> <p>D\u00e9marrez le cluster :</p> <p>bash</p> <p><code>minikube start</code></p> </li> </ol> <p>Remarque : La commande <code>minikube start</code> t\u00e9l\u00e9charge les pilotes n\u00e9cessaires et cr\u00e9e une machine virtuelle ou un environnement Docker. Cela peut prendre un peu de temps lors de la premi\u00e8re ex\u00e9cution.</p>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#installation-de-kubectl","title":"Installation de kubectl","text":"<p>Installation sur Linux :</p> <ol> <li> <p>T\u00e9l\u00e9chargez le binaire kubectl :</p> <p>bash</p> <p><code>curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl</code></p> </li> <li> <p>Rendez le fichier ex\u00e9cutable :</p> <p>bash</p> <p><code>chmod +x ./kubectl</code></p> </li> <li> <p>D\u00e9placez-le dans votre <code>PATH</code> :</p> <p>bash</p> <p><code>sudo mv ./kubectl /usr/local/bin/kubectl</code></p> </li> <li> <p>V\u00e9rifiez la version :</p> <p>bash</p> <p><code>kubectl version --client</code></p> </li> </ol>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#activation-de-lauto-completion-pour-bash","title":"Activation de l'auto-compl\u00e9tion pour Bash","text":"<ol> <li> <p>Installez le package <code>bash-completion</code> :</p> <p>bash</p> <p><code>sudo apt-get install bash-completion</code></p> </li> <li> <p>Ajoutez l\u2019auto-compl\u00e9tion au fichier <code>.bashrc</code> :</p> <p>bash</p> <p><code>echo 'source &lt;(kubectl completion bash)' &gt;&gt;~/.bashrc</code></p> </li> <li> <p>Rechargez le terminal :</p> <p>bash</p> <p><code>source ~/.bashrc</code></p> </li> </ol> <p>Testez l\u2019auto-compl\u00e9tion :</p> <ul> <li>Tapez <code>kubectl</code> suivi d\u2019une lettre (par ex. <code>g</code>) puis appuyez sur la touche Tab pour voir les suggestions.</li> </ul>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/d_Explication_de_l%27environnement_et_mise_en_place_sur_Linux/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Minikube : Un outil simple et rapide pour ex\u00e9cuter Kubernetes localement.</li> <li>kubectl : Le client officiel pour interagir avec Kubernetes, indispensable pour g\u00e9rer les ressources et superviser le cluster.</li> <li>Installation et configuration :<ul> <li>Minikube n\u00e9cessite Docker ou une machine virtuelle pour fonctionner.</li> <li>kubectl est facile \u00e0 installer et son auto-compl\u00e9tion am\u00e9liore consid\u00e9rablement l'exp\u00e9rience utilisateur.</li> </ul> </li> </ul> <p>Avec ces outils, vous disposez d\u2019un environnement local complet pour apprendre, d\u00e9velopper et tester Kubernetes avant de passer \u00e0 des environnements de production.</p>","tags":["#Intro_Kub/Mise_En_Place_Linux"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/","title":"e Pr\u00e9sentation du dashboard Minikube et Kubectl","text":"","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/#le-dashboard-de-minikube","title":"Le Dashboard de Minikube","text":"<p>Minikube fournit un tableau de bord (dashboard) qui offre une interface graphique simple pour superviser et interagir avec votre cluster Kubernetes.</p>","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/#etapes-pour-activer-et-lancer-le-tableau-de-bord","title":"\u00c9tapes pour activer et lancer le tableau de bord :","text":"<ol> <li> <p>Activer le module <code>metrics-server</code> :     Ce module est n\u00e9cessaire pour certaines fonctionnalit\u00e9s, notamment la collecte de m\u00e9triques.</p> <p>bash</p> <p><code>minikube addons enable metrics-server</code></p> </li> <li> <p>Lancer le tableau de bord :     Cette commande cr\u00e9e un proxy temporaire pour rendre le tableau de bord accessible via votre navigateur.</p> <p>bash</p> <p><code>minikube dashboard</code></p> </li> <li> <p>Arr\u00eater le tableau de bord :</p> <ul> <li>Pour arr\u00eater le proxy, utilisez Ctrl+C dans le terminal.</li> <li> <p>Pour arr\u00eater compl\u00e8tement le cluster Minikube :</p> <p>bash</p> <p><code>minikube stop</code></p> </li> <li> <p>Pour supprimer tous les clusters cr\u00e9\u00e9s avec Minikube :</p> <p>bash</p> <p><code>minikube delete --all</code></p> </li> </ul> </li> </ol>","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/#gestion-des-contextes-avec-kubectl","title":"Gestion des contextes avec kubectl","text":"<p>Lorsque plusieurs environnements Kubernetes sont configur\u00e9s sur une m\u00eame machine (par exemple, Minikube et Docker Desktop Kubernetes), il est crucial de choisir le contexte actif. Le contexte d\u00e9termine quel cluster Kubernetes est utilis\u00e9 par <code>kubectl</code>.</p>","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/#commandes-pour-gerer-les-contextes","title":"Commandes pour g\u00e9rer les contextes :","text":"<ol> <li> <p>Lister les contextes disponibles :</p> <p>bash</p> <p><code>kubectl config get-contexts</code></p> </li> <li> <p>Changer de contexte :</p> <ul> <li> <p>Pour utiliser Docker Desktop :</p> <p>bash</p> <p><code>kubectl config use-context docker-desktop</code></p> </li> <li> <p>Pour utiliser Minikube :</p> <p>bash</p> <p><code>kubectl config use-context minikube</code></p> </li> </ul> </li> <li> <p>V\u00e9rifier la connexion au cluster :     Une fois le contexte d\u00e9fini, assurez-vous que <code>kubectl</code> fonctionne correctement :</p> <p>bash</p> <p><code>kubectl get nodes</code></p> </li> </ol>","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_1_Introduction_Kubernetes/e_Pr%C3%A9sentation_du_dashboard_Minikube_et_Kubectl/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li> <p>Minikube Dashboard :</p> <ul> <li>Une interface graphique pour superviser les ressources Kubernetes.</li> <li>N\u00e9cessite l'activation du module <code>metrics-server</code>.</li> <li>Peut \u00eatre lanc\u00e9 avec <code>minikube dashboard</code> et arr\u00eat\u00e9 avec Ctrl+C ou <code>minikube stop</code>.</li> <li> <p>Gestion des contextes :</p> </li> <li> <p>Indispensable lorsqu\u2019on utilise plusieurs environnements Kubernetes (Minikube, Docker Desktop, etc.).</p> </li> <li>Permet de basculer facilement entre les clusters avec <code>kubectl config use-context</code>.</li> </ul> </li> </ul> <p>Avec ces outils et configurations, vous \u00eates pr\u00eat \u00e0 explorer plus en d\u00e9tail les fonctionnalit\u00e9s de Kubernetes ! \ud83d\ude80</p>","tags":["#Intro_Kub/Minikube_KubeCtl"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/Introduction_au_principaux_objets_Kubernetes/","title":"Introduction au principaux objets Kubernetes","text":"<p>[[a) Les Objets Kubernetes]]</p> <p>[[b) D\u00e9crire les objets Kubernetes (objet spec)]]</p> <p>[[c) Introduction aux Pods]]</p> <p>[[d) Introduction aux d\u00e9ploiement (Deployments)]]</p> <p>[[e) Introduction aux Services]]</p>"},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/","title":"a Les Objets Kubernetes","text":"","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/#fonctionnement-general-des-objets-kubernetes","title":"Fonctionnement g\u00e9n\u00e9ral des objets Kubernetes","text":"<p>Les objets Kubernetes sont des entit\u00e9s persistantes utilis\u00e9es pour repr\u00e9senter l\u2019\u00e9tat de votre cluster. Ils servent \u00e0 d\u00e9finir l\u2019\u00e9tat d\u00e9sir\u00e9 du syst\u00e8me, et Kubernetes s\u2019efforce constamment de faire correspondre l\u2019\u00e9tat actuel \u00e0 cet \u00e9tat d\u00e9sir\u00e9.</p> <ul> <li> <p>D\u00e9finition :     Un objet Kubernetes est un \"enregistrement d'intention\". Une fois un objet cr\u00e9\u00e9, Kubernetes travaille automatiquement pour le maintenir en place.</p> </li> <li> <p>Exemples d'\u00e9tat d\u00e9sir\u00e9 :</p> <ul> <li>Faire fonctionner un conteneur (via des Pods).</li> <li>G\u00e9rer l\u2019acc\u00e8s r\u00e9seau aux applications (via des Services).</li> <li>Maintenir un certain nombre de r\u00e9plicas en cours d\u2019ex\u00e9cution (via des Deployments).</li> <li>Interaction avec les objets : Les objets sont cr\u00e9\u00e9s, modifi\u00e9s ou supprim\u00e9s en utilisant l\u2019API Kubernetes. Les outils comme kubectl servent d\u2019interface avec cette API.</li> </ul> </li> </ul>","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/#principaux-objets-kubernetes","title":"Principaux objets Kubernetes","text":"<p>Voici une liste des objets fondamentaux que vous rencontrerez et utiliserez r\u00e9guli\u00e8rement :</p> <ol> <li> <p>Pod :</p> <ul> <li>Repr\u00e9sente l'unit\u00e9 de base d'ex\u00e9cution dans Kubernetes.</li> <li>Contient un ou plusieurs conteneurs partageant un m\u00eame r\u00e9seau et un espace de stockage.</li> <li> <p>Service :</p> </li> <li> <p>Abstraction d\u00e9finissant un ensemble logique de Pods.</p> </li> <li>Fournit des m\u00e9canismes pour la d\u00e9couverte de services et l'\u00e9quilibrage de charge.</li> <li> <p>Volume :</p> </li> <li> <p>Abstraction pour le stockage des donn\u00e9es des conteneurs.</p> </li> <li>Persiste m\u00eame en cas de red\u00e9marrage des conteneurs.</li> <li> <p>Namespace :</p> </li> <li> <p>Permet de diviser un cluster Kubernetes en plusieurs clusters virtuels isol\u00e9s.</p> </li> <li>Utile pour organiser les ressources ou g\u00e9rer des environnements multiples (dev, test, prod).</li> <li> <p>Deployment :</p> </li> <li> <p>G\u00e8re les d\u00e9ploiements d'applications sans \u00e9tat.</p> </li> <li>Facilite les mises \u00e0 jour, l\u2019\u00e9volutivit\u00e9 et la gestion des r\u00e9plicas de Pods.</li> <li> <p>StatefulSet :</p> </li> <li> <p>G\u00e8re les applications avec \u00e9tat (comme les bases de donn\u00e9es).</p> </li> <li>Maintient une identit\u00e9 unique pour chaque Pod.</li> <li> <p>DaemonSet :</p> </li> <li> <p>Assure qu\u2019un Pod sp\u00e9cifique est en cours d\u2019ex\u00e9cution sur tous (ou certains) n\u0153uds d\u2019un cluster.</p> </li> <li>Utilis\u00e9 pour des t\u00e2ches comme la journalisation ou la supervision.</li> <li> <p>Job :</p> </li> <li> <p>Repr\u00e9sente une t\u00e2che ponctuelle ex\u00e9cut\u00e9e jusqu\u2019\u00e0 son ach\u00e8vement.</p> </li> <li> <p>CronJob :</p> </li> <li> <p>Programme l\u2019ex\u00e9cution de t\u00e2ches r\u00e9p\u00e9t\u00e9es \u00e0 des intervalles d\u00e9finis.</p> </li> </ul> </li> </ol>","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/#specification-et-statut-des-objets-kubernetes","title":"Sp\u00e9cification et statut des objets Kubernetes","text":"<p>Tous les objets Kubernetes comportent deux champs principaux :</p> <ol> <li> <p>Spec (Specification) :</p> <ul> <li>D\u00e9finit les caract\u00e9ristiques et l\u2019\u00e9tat souhait\u00e9 de l\u2019objet.</li> <li>Par exemple : nombre de r\u00e9plicas pour un Deployment.</li> <li> <p>Status (Statut) :</p> </li> <li> <p>D\u00e9crit l\u2019\u00e9tat actuel de l\u2019objet.</p> </li> <li>Mis \u00e0 jour automatiquement par le syst\u00e8me Kubernetes pour refl\u00e9ter l\u2019\u00e9tat r\u00e9el.</li> </ul> </li> </ol>","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/#exemple-le-deployment","title":"Exemple : Le Deployment","text":"<ul> <li>Spec (\u00c9tat souhait\u00e9) :<ul> <li>Vous configurez un Deployment pour qu\u2019il ex\u00e9cute trois r\u00e9plicas d\u2019une application.</li> </ul> </li> <li>Status (\u00c9tat actuel) :<ul> <li>Si l\u2019un des Pods \u00e9choue, Kubernetes d\u00e9tecte la diff\u00e9rence entre l\u2019\u00e9tat souhait\u00e9 (3 Pods) et l\u2019\u00e9tat actuel (2 Pods). Il d\u00e9marre alors une nouvelle instance pour r\u00e9tablir la conformit\u00e9 avec la sp\u00e9cification.</li> </ul> </li> </ul>","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/a_Les_Objets_Kubernetes/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Objets Kubernetes : Entit\u00e9s persistantes utilis\u00e9es pour repr\u00e9senter et g\u00e9rer l\u2019\u00e9tat du cluster.</li> <li>Principaux objets : Pods, Services, Deployments, StatefulSets, Volumes, etc.</li> <li>Sp\u00e9cification vs Statut :<ul> <li>La spec d\u00e9clare l\u2019\u00e9tat souhait\u00e9.</li> <li>Le status refl\u00e8te l\u2019\u00e9tat r\u00e9el, et Kubernetes travaille constamment \u00e0 r\u00e9duire l\u2019\u00e9cart entre les deux.</li> </ul> </li> </ul> <p>Kubernetes automatise ainsi la gestion des ressources, permettant de maintenir un \u00e9tat stable m\u00eame en cas de d\u00e9faillance ou de changement.</p>","tags":["#Principaux_Objet/Fonctionnement_G\u00e9n\u00e9ral_Objet"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/","title":"b D\u00e9crire les objets Kubernetes objet spec","text":"","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#creer-des-objets-kubernetes","title":"Cr\u00e9er des objets Kubernetes","text":"<p>Pour cr\u00e9er un objet dans Kubernetes, vous devez fournir une sp\u00e9cification (spec) qui d\u00e9crit son \u00e9tat souhait\u00e9, ainsi que des informations de base sur l\u2019objet (comme son nom). Kubernetes utilise ces sp\u00e9cifications pour maintenir automatiquement l'\u00e9tat d\u00e9sir\u00e9.</p>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#methodes-de-creation","title":"M\u00e9thodes de cr\u00e9ation :","text":"<ol> <li>Directement via l\u2019API Kubernetes :<ul> <li>En envoyant des requ\u00eates HTTP avec un corps au format JSON.</li> </ul> </li> <li>Via des fichiers YAML avec kubectl (m\u00e9thode la plus courante) :<ul> <li>YAML est traduit par kubectl en requ\u00eates API JSON.</li> <li> <p>Exemple de commande :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl apply -f mon_fichier.yaml</code></p> </li> </ul> </li> </ol>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#endpoints-principaux-de-lapi-kubernetes","title":"Endpoints principaux de l'API Kubernetes","text":"<p>Voici les endpoints couramment utilis\u00e9s pour interagir avec l\u2019API Kubernetes :</p> <ul> <li> <p>/healthz : V\u00e9rification de l\u2019\u00e9tat de sant\u00e9 (vivacit\u00e9 et disponibilit\u00e9) du serveur API.</p> <ul> <li>Liveness : V\u00e9rifie si le serveur fonctionne.</li> <li>Readiness : V\u00e9rifie si le serveur est pr\u00eat \u00e0 traiter des requ\u00eates.</li> <li>/metrics : Expose des m\u00e9triques au format Prometheus, telles que l\u2019utilisation de la m\u00e9moire, du CPU, et les temps de r\u00e9ponse.</li> </ul> </li> <li> <p>/api : Acc\u00e8s aux ressources de base comme les Pods, Services, et Volumes.</p> </li> <li> <p>/apis : Extension de l\u2019API pour des ressources suppl\u00e9mentaires ou avanc\u00e9es.</p> </li> <li> <p>/version : Retourne la version du serveur API.</p> </li> <li> <p>/openapi/v3 : Fournit les sp\u00e9cifications OpenAPI.</p> </li> <li> <p>/readyz et /livez : Endpoints sp\u00e9cifiques pour les probes de vivacit\u00e9 et de disponibilit\u00e9.</p> </li> </ul> <p>Acc\u00e8s aux endpoints : Pour y acc\u00e9der, lancez un proxy local avec :</p> <p>bash</p> <p><code>kubectl proxy --port=8080</code></p> <p>Ensuite, visitez une URL comme :</p> <p><code>http://localhost:8080/apis/apps/v1</code></p>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#versionnement-des-api-kubernetes","title":"Versionnement des API Kubernetes","text":"<p>Les versions des API permettent de g\u00e9rer l\u2019\u00e9volution et la compatibilit\u00e9 entre diff\u00e9rentes versions de Kubernetes.</p>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#niveaux-de-versionnement","title":"Niveaux de versionnement :","text":"<ol> <li> <p>Alpha :</p> <ul> <li>Indiqu\u00e9 par <code>alpha</code> (ex. : <code>v1alpha1</code>).</li> <li>D\u00e9sactiv\u00e9 par d\u00e9faut.</li> <li>Instable, susceptible de changer ou d\u2019\u00eatre supprim\u00e9.</li> <li> <p>Beta :</p> </li> <li> <p>Indiqu\u00e9 par <code>beta</code> (ex. : <code>v2beta3</code>).</p> </li> <li>Bien test\u00e9, mais le sch\u00e9ma peut encore \u00e9voluer.</li> <li>D\u00e9sactiv\u00e9 par d\u00e9faut.</li> <li> <p>Stable :</p> </li> <li> <p>Indiqu\u00e9 par <code>vX</code> (ex. : <code>v1</code>).</p> </li> <li>Garantit une compatibilit\u00e9 future pour toutes les versions mineures de Kubernetes.</li> </ul> </li> </ol>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#groupes-dapi-kubernetes","title":"Groupes d\u2019API Kubernetes","text":"<p>Les groupes d'API permettent d\u2019organiser les types de ressources et leurs versions.</p> <ol> <li> <p>Groupe \"Core\" (Legacy) :</p> <ul> <li>Contient les ressources de base comme Pods, Services, et ConfigMaps.</li> <li>Accessible via <code>/api/v1</code>.</li> <li> <p>Groupes nomm\u00e9s :</p> </li> <li> <p>Introduits pour g\u00e9rer des ressources avanc\u00e9es.</p> </li> <li>Exemple : <code>/apis/apps/v1</code> pour les Deployments, ReplicaSets, etc.</li> <li> <p>Le champ <code>apiVersion</code> combine le groupe et la version, par exemple :</p> <p>yaml</p> <p><code>apiVersion: batch/v1</code></p> </li> </ul> </li> </ol>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#bref-rappel-sur-yaml","title":"Bref rappel sur YAML","text":"<p>Kubernetes utilise YAML pour les fichiers de configuration. Voici les concepts cl\u00e9s :</p> <ul> <li>Indentation : Utilisez des espaces, pas des tabulations.</li> <li>Listes : Chaque \u00e9l\u00e9ment commence par un tiret (<code>-</code>).</li> <li>Dictionnaires : Cl\u00e9s et valeurs s\u00e9par\u00e9es par <code>:</code>.</li> </ul>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#exemple-de-fichier-yaml","title":"Exemple de fichier YAML :","text":"<p>yaml</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: node-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: node\n  template:\n    metadata:\n      labels:\n        app: node\n    spec:\n      containers:\n      - name: node\n        image: node:alpine\n        ports:\n        - containerPort: 80\n</code></pre>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#champs-obligatoires-pour-les-objets-kubernetes","title":"Champs obligatoires pour les objets Kubernetes","text":"<ol> <li>apiVersion : La version de l'API utilis\u00e9e (ex. : <code>apps/v1</code>).</li> <li>kind : Le type d'objet (ex. : <code>Deployment</code>, <code>Pod</code>, <code>Service</code>).</li> <li>metadata : Identifie l\u2019objet de mani\u00e8re unique, avec des champs comme :<ul> <li><code>name</code> : Nom de l'objet.</li> <li><code>namespace</code> : Optionnel, pour organiser les objets.</li> </ul> </li> <li>spec : D\u00e9crit l\u2019\u00e9tat souhait\u00e9 pour l\u2019objet.</li> </ol> <p>Chaque type d'objet a des champs sp\u00e9cifiques dans la section spec, adapt\u00e9s \u00e0 son r\u00f4le (ex. : r\u00e9plicas pour un Deployment, ports pour un Service).</p>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/b_D%C3%A9crire_les_objets_Kubernetes_objet_spec/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les objets Kubernetes sont cr\u00e9\u00e9s via des fichiers YAML ou des requ\u00eates API.</li> <li>Les endpoints API permettent un contr\u00f4le direct mais sont souvent masqu\u00e9s par des outils comme kubectl.</li> <li>Le versionnement et les groupes d'API assurent la compatibilit\u00e9 et l\u2019\u00e9volutivit\u00e9.</li> <li>YAML est le format privil\u00e9gi\u00e9 pour la configuration des objets, avec des champs obligatoires tels que apiVersion, kind, metadata, et spec.</li> </ul> <p>Tu es maintenant pr\u00eat \u00e0 configurer et g\u00e9rer des objets Kubernetes en toute confiance !</p>","tags":["#Principaux_Objet/Desc_Objet_Kub"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/","title":"c Introduction aux Pods","text":"","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#que-sont-les-pods","title":"Que sont les Pods ?","text":"<p>Les Pods sont les plus petites unit\u00e9s d\u00e9ployables dans Kubernetes. Ils repr\u00e9sentent un groupe de conteneurs, avec un stockage partag\u00e9, une identit\u00e9 r\u00e9seau commune, et une sp\u00e9cification d\u00e9finissant comment les conteneurs doivent \u00eatre ex\u00e9cut\u00e9s.</p> <ul> <li>Origine du terme \"Pod\" :<ul> <li>Inspir\u00e9 de pod of whales (banc de baleines) ou pea pod (gousse de pois), refl\u00e9tant la d\u00e9pendance et la proximit\u00e9 des conteneurs dans un Pod.</li> </ul> </li> <li>Caract\u00e9ristiques principales :<ul> <li>Un Pod peut contenir un ou plusieurs conteneurs \u00e9troitement coupl\u00e9s (cas rare).</li> <li>Il partage des ressources comme :<ul> <li>Volumes pour le stockage.</li> <li>Adresse IP et ports r\u00e9seau.</li> </ul> </li> </ul> </li> </ul>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#structure-et-schema-des-pods","title":"Structure et sch\u00e9ma des Pods","text":"<ul> <li>Chaque Pod s'ex\u00e9cute sur un n\u0153ud de travail. Un n\u0153ud peut h\u00e9berger plusieurs Pods.</li> <li>Les conteneurs au sein d\u2019un Pod peuvent partager :<ul> <li>Volumes : pour un stockage commun.</li> <li>Ressources r\u00e9seau : comme une adresse IP partag\u00e9e.</li> </ul> </li> </ul>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#utilisation-des-pods","title":"Utilisation des Pods","text":"<ol> <li> <p>Pod \u00e0 conteneur unique (le cas le plus courant) :</p> <ul> <li>Chaque Pod encapsule un seul conteneur.</li> <li>Kubernetes g\u00e8re les Pods directement, et non les conteneurs.</li> <li> <p>Pod multi-conteneurs (cas rare) :</p> </li> <li> <p>Plusieurs conteneurs sont colocalis\u00e9s dans un Pod et partagent des ressources.</p> </li> <li>Exemples d\u2019usage :<ul> <li>Un conteneur sert des donn\u00e9es stock\u00e9es dans un volume.</li> <li>Un autre conteneur met \u00e0 jour ou rafra\u00eechit ces donn\u00e9es.</li> </ul> </li> <li> <p>Scalabilit\u00e9 et r\u00e9plication :</p> </li> <li> <p>Un Pod est con\u00e7u pour ex\u00e9cuter une seule instance d'une application.</p> </li> <li>Pour augmenter les ressources disponibles (scalabilit\u00e9 horizontale), il faut d\u00e9ployer plusieurs Pods (r\u00e9plication).</li> </ul> </li> </ol>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#creer-un-premier-pod","title":"Cr\u00e9er un premier Pod","text":"","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#exemple-creation-dun-pod-nginx","title":"Exemple : Cr\u00e9ation d\u2019un Pod Nginx","text":"<ol> <li> <p>Fichier YAML pour le Pod :     Cr\u00e9ez un fichier nomm\u00e9 <code>premier-pod.yaml</code> :</p> <p>yaml</p> <p>Copier le code</p> <p>apiVersion: v1 kind: Pod metadata:   name: nginx spec:   containers:   - name: nginx image: nginx:alpine ports: - containerPort: 80</p> </li> <li> <p>Cr\u00e9er le Pod avec kubectl :</p> <p>bash</p> <p><code>kubectl apply -f premier-pod.yaml</code></p> <p>R\u00e9sultat :</p> <p>plaintext</p> <p><code>pod/nginx created</code></p> </li> <li> <p>V\u00e9rifier le statut du Pod :</p> <p>bash</p> <p><code>kubectl get pods</code></p> <p>Exemple de sortie initiale :</p> <p>plaintext</p> <p><code>NAME    READY   STATUS              RESTARTS   AGE nginx   0/1     ContainerCreating   0          3s</code></p> <p>Apr\u00e8s quelques instants :</p> <p>plaintext</p> <p><code>NAME    READY   STATUS    RESTARTS   AGE nginx   1/1     Running   0          5m</code></p> <p>Champs de la commande <code>kubectl get pods</code> :</p> <ul> <li>NAME : Nom du Pod (issu de <code>metadata &gt; name</code>).</li> <li>READY : Nombre de conteneurs pr\u00eats dans le Pod (par exemple, <code>1/1</code>).</li> <li>STATUS : \u00c9tat actuel du Pod (<code>ContainerCreating</code>, <code>Running</code>, etc.).</li> <li>RESTARTS : Nombre de red\u00e9marrages des conteneurs.</li> <li>AGE : Temps \u00e9coul\u00e9 depuis la cr\u00e9ation du Pod.</li> <li>Supprimer le Pod :</li> </ul> <p>bash</p> <p><code>kubectl delete pod nginx</code></p> <p>R\u00e9sultat :</p> <p>plaintext</p> <p><code>pod \"nginx\" deleted</code></p> </li> </ol>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#remarques-importantes-sur-les-pods","title":"Remarques importantes sur les Pods","text":"<ul> <li> <p>Red\u00e9marrage :</p> <ul> <li>Un conteneur dans un Pod peut red\u00e9marrer, mais le Pod lui-m\u00eame persiste jusqu'\u00e0 sa suppression explicite.</li> <li>Un Pod est un environnement d\u2019ex\u00e9cution, pas un processus.</li> <li> <p>Cr\u00e9ation des Pods :</p> </li> <li> <p>Dans la majorit\u00e9 des cas, les Pods ne sont pas cr\u00e9\u00e9s directement. Ils sont g\u00e9n\u00e9r\u00e9s via des objets comme :</p> <ul> <li>Deployments (gestion de r\u00e9plicas et mises \u00e0 jour).</li> <li>StatefulSets (gestion des applications avec \u00e9tat).</li> <li>DaemonSets (d\u00e9ploiement sur tous les n\u0153uds).</li> <li>Jobs et CronJobs (t\u00e2ches ponctuelles ou planifi\u00e9es).</li> </ul> </li> </ul> </li> </ul>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/c_Introduction_aux_Pods/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les Pods sont la brique de base d\u00e9ployable dans Kubernetes.</li> <li>Ils encapsulent un ou plusieurs conteneurs et partagent des ressources comme des volumes et des adresses r\u00e9seau.</li> <li>Bien que des Pods puissent \u00eatre cr\u00e9\u00e9s directement, il est pr\u00e9f\u00e9rable d\u2019utiliser des objets de gestion comme Deployments ou StatefulSets pour des besoins complexes.</li> </ul> <p>Les Pods seront approfondis au fur et \u00e0 mesure de la formation pour aborder des cas plus complexes et des configurations avanc\u00e9es.</p>","tags":["Principaux_Objet/Introduction_Pods"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/","title":"d Introduction aux d\u00e9ploiement Deployments","text":"","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#quest-ce-quun-deploiement-dapplication","title":"Qu'est-ce qu'un d\u00e9ploiement d'application ?","text":"<p>Un d\u00e9ploiement dans Kubernetes permet de g\u00e9rer le cycle de vie des applications conteneuris\u00e9es en cr\u00e9ant un objet Deployment. Cet objet d\u00e9finit comment cr\u00e9er et mettre \u00e0 jour les instances de votre application de mani\u00e8re d\u00e9clarative.</p>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#etapes-dun-deploiement","title":"\u00c9tapes d'un d\u00e9ploiement","text":"<ol> <li> <p>D\u00e9finition du d\u00e9ploiement :</p> <ul> <li>Les caract\u00e9ristiques de l'application sont sp\u00e9cifi\u00e9es dans un fichier YAML :<ul> <li>Nombre de r\u00e9plicas.</li> <li>Images de conteneurs \u00e0 utiliser.</li> <li>Ports expos\u00e9s.</li> </ul> </li> <li> <p>Exemple :</p> <p>yaml</p> <p>apiVersion: apps/v1 kind: Deployment metadata:   name: nginx-deployment spec:   replicas: 1   selector:     matchLabels:       app: nginx   template:     metadata:       labels:         app: nginx     spec:       containers:          -name: nginx-container          image: nginx:alpine         ports:         - containerPort: 80</p> </li> </ul> </li> <li> <p>Cr\u00e9ation du d\u00e9ploiement :</p> <ul> <li> <p>On applique le fichier YAML au cluster :</p> <p>bash</p> <p><code>kubectl apply -f mon-premier-deploiement.yaml</code></p> </li> </ul> </li> <li> <p>Planification :</p> <ul> <li>Le kube-scheduler d\u00e9cide o\u00f9 placer les Pods en tenant compte des ressources disponibles et des exigences du d\u00e9ploiement.</li> <li> <p>Surveillance :</p> </li> <li> <p>Le Deployment controller surveille la disponibilit\u00e9 des instances.</p> </li> <li>En cas de panne d\u2019un n\u0153ud, il remplace automatiquement les Pods manquants.</li> </ul> </li> </ol>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#premier-deploiement","title":"Premier d\u00e9ploiement","text":"","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#creation-dun-deploiement-nginx","title":"Cr\u00e9ation d\u2019un d\u00e9ploiement Nginx","text":"<ol> <li> <p>Cr\u00e9ez un fichier <code>mon-premier-deploiement.yaml</code> avec les champs suivants :</p> <ul> <li>apiVersion : Version de l'API Kubernetes utilis\u00e9e (<code>apps/v1</code> ici).</li> <li>kind : Type de ressource (ici, <code>Deployment</code>).</li> <li>metadata : Informations sur l'objet (nom, labels).</li> <li>spec : D\u00e9crit l'\u00e9tat souhait\u00e9 (r\u00e9plicas, s\u00e9lecteurs, mod\u00e8le de Pods).</li> <li>template :<ul> <li>D\u00e9finit les Pods cr\u00e9\u00e9s par ce d\u00e9ploiement.</li> <li>Contient les labels, conteneurs, et leurs configurations.</li> </ul> </li> <li>Appliquez-le au cluster avec <code>kubectl apply</code>.</li> </ul> </li> <li> <p>V\u00e9rifiez l\u2019\u00e9tat des d\u00e9ploiements :</p> <p>bash</p> <p><code>kubectl get deployments</code></p> <p>Sortie typique :</p> <p>plaintext</p> <p><code>NAME               READY   UP-TO-DATE   AVAILABLE   AGE nginx-deployment   1/1     1            1           13s</code></p> </li> </ol>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#explication-des-colonnes","title":"Explication des colonnes :","text":"<ul> <li>NAME : Nom du d\u00e9ploiement.</li> <li>READY : Nombre de r\u00e9plicas pr\u00eats.</li> <li>UP-TO-DATE : Nombre de r\u00e9plicas correspondant \u00e0 la derni\u00e8re configuration.</li> <li>AVAILABLE : R\u00e9plicas disponibles pour traiter les requ\u00eates.</li> <li>AGE : Temps \u00e9coul\u00e9 depuis la cr\u00e9ation.</li> </ul>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#visualisation-dans-minikube","title":"Visualisation dans Minikube","text":"<p>Pour voir les objets cr\u00e9\u00e9s par Kubernetes :</p> <ol> <li> <p>Lancez le tableau de bord :</p> <p>bash</p> <p>Copier le code</p> <p><code>minikube dashboard</code></p> </li> <li> <p>Acc\u00e9dez \u00e0 l\u2019onglet Workloads :</p> <ul> <li>Vue d\u2019ensemble des D\u00e9ploiements, Pods et ReplicaSets.</li> <li>ReplicaSets garantissent un nombre stable de Pods en cours d'ex\u00e9cution.</li> </ul> </li> </ol>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#visualisation-dans-docker-desktop","title":"Visualisation dans Docker Desktop","text":"<p>Si vous utilisez Docker Desktop :</p> <ul> <li>Acc\u00e9dez \u00e0 l\u2019onglet Containers.</li> <li>Les conteneurs Kubernetes sont pr\u00e9fix\u00e9s par <code>k8s</code>.</li> <li>Vous pouvez voir les journaux, ouvrir un terminal ou inspecter les conteneurs.</li> </ul>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#acceder-a-lapplication","title":"Acc\u00e9der \u00e0 l'application","text":"","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#pourquoi-ne-fonctionne-t-elle-pas-sur-le-port-80-directement","title":"Pourquoi ne fonctionne-t-elle pas sur le port 80 directement ?","text":"<ul> <li>Les Pods dans Kubernetes s'ex\u00e9cutent dans un r\u00e9seau priv\u00e9 isol\u00e9.</li> <li>Par d\u00e9faut, ils ne sont accessibles qu\u2019au sein du cluster.</li> </ul>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#solution","title":"Solution :","text":"<ul> <li>Utilisez un Service pour exposer les Pods au r\u00e9seau externe.</li> <li>Nous verrons comment configurer un Service dans les prochaines sections.</li> </ul>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/d_Introduction_aux_d%C3%A9ploiement_Deployments/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les Deployments permettent de g\u00e9rer les instances d'une application de mani\u00e8re d\u00e9clarative.</li> <li>Ils offrent :<ul> <li>Mise \u00e0 l\u2019\u00e9chelle : Augmenter ou r\u00e9duire le nombre de r\u00e9plicas.</li> <li>Mises \u00e0 jour : Mettre \u00e0 jour les images des conteneurs.</li> <li>Auto-r\u00e9paration : Remplacer automatiquement les Pods d\u00e9faillants.</li> </ul> </li> <li>Les Pods d\u2019un Deployment ne sont pas accessibles directement de l\u2019ext\u00e9rieur du cluster, n\u00e9cessitant un Service pour \u00eatre expos\u00e9s.</li> </ul>","tags":["Principaux_Objet/Introduction_Deployment"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/","title":"e Introduction aux Services","text":"","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#quest-ce-quun-service-kubernetes","title":"Qu'est-ce qu'un Service Kubernetes ?","text":"<p>Un Service est une abstraction Kubernetes permettant de :</p> <ul> <li>Exposer les Pods au trafic externe ou interne.</li> <li>Assurer l'\u00e9quilibrage de charge.</li> <li>Faciliter la d\u00e9couverte de services.</li> </ul> <p>Les Services jouent un r\u00f4le crucial dans le r\u00e9seau Kubernetes en rendant les applications accessibles tout en g\u00e9rant automatiquement les changements de Pods (cr\u00e9ation/destruction) pour maintenir la connectivit\u00e9.</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#configurations-des-services","title":"Configurations des Services","text":"<ol> <li> <p>ClusterIP (par d\u00e9faut) :</p> <ul> <li>Expose le Service uniquement au sein du cluster.</li> <li>Accessible via une IP interne.</li> <li> <p>NodePort :</p> </li> <li> <p>Rend le Service accessible depuis l\u2019ext\u00e9rieur du cluster \u00e0 travers <code>&lt;IP du n\u0153ud&gt;:&lt;port du n\u0153ud&gt;</code>.</p> </li> <li>Le port du n\u0153ud est g\u00e9n\u00e9r\u00e9 dans la plage 30000-32767.</li> <li> <p>LoadBalancer :</p> </li> <li> <p>Cr\u00e9e un \u00e9quilibreur de charge externe (n\u00e9cessite un cloud provider).</p> </li> <li>Attribue une IP externe fixe au Service.</li> <li> <p>ExternalName :</p> </li> <li> <p>Redirige vers un nom externe, en renvoyant un enregistrement CNAME.</p> </li> </ul> </li> </ol>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#labels-et-services","title":"Labels et Services","text":"<p>Les labels (paires cl\u00e9/valeur) sont utilis\u00e9s pour :</p> <ul> <li>Identifier les objets Kubernetes (ex. : Pods).</li> <li>D\u00e9finir les cibles des Services via un s\u00e9lecteur.</li> </ul>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#exemple","title":"Exemple :","text":"<p>Un Service avec le s\u00e9lecteur <code>app: A</code> cible tous les Pods ayant ce label, y compris ceux cr\u00e9\u00e9s par un Deployment ou un ReplicaSet.</p> <p></p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#creation-dun-premier-service","title":"Cr\u00e9ation d'un premier Service","text":"<p>apiVersion: v1 kind: Service metadata:   name: nginx-service spec:   type: NodePort   selector:     app: nginx   ports:     - protocol: TCP       port: 80       targetPort: 80</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#explications","title":"Explications :","text":"<ul> <li>apiVersion : Version de l'API utilis\u00e9e pour cr\u00e9er le Service (<code>v1</code> ici).</li> <li>kind : Type d'objet \u00e0 cr\u00e9er (ici, <code>Service</code>).</li> <li>metadata &gt; name : Nom du Service (<code>nginx-service</code>).</li> <li>spec :<ul> <li>type : Type de Service (<code>NodePort</code> dans cet exemple).</li> <li>selector : Cible les Pods avec le label <code>app: nginx</code> (correspond au Deployment pr\u00e9c\u00e9dent).</li> <li>ports :<ul> <li>port : Port expos\u00e9 par le Service (80 ici).</li> <li>targetPort : Port du conteneur cible (80 dans les Pods).</li> </ul> </li> </ul> </li> </ul>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#verifier-letat-dun-service","title":"V\u00e9rifier l'\u00e9tat d'un Service","text":"<p>Commande pour afficher les Services du cluster :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl get services</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p>Copier le code</p> <p><code>NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE kubernetes      ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        8m58s nginx-service   NodePort    10.97.146.208   &lt;none&gt;        80:31220/TCP   4m35s</code></p> <ul> <li>NAME : Nom du Service.</li> <li>TYPE : Type du Service (<code>ClusterIP</code>, <code>NodePort</code>, etc.).</li> <li>CLUSTER-IP : Adresse IP interne du Service.</li> <li>EXTERNAL-IP : IP externe (vide pour un NodePort ou ClusterIP).</li> <li>PORT(S) : Ports expos\u00e9s, avec le format <code>&lt;port&gt;:&lt;NodePort&gt;/TCP</code>.</li> <li>AGE : Dur\u00e9e depuis la cr\u00e9ation du Service.</li> </ul>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#acces-au-service","title":"Acc\u00e8s au Service","text":"","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#minikube","title":"Minikube","text":"<p>Pour acc\u00e9der \u00e0 l\u2019application via Minikube, ouvrez un tunnel :</p> <p>bash</p> <p>Copier le code</p> <p><code>minikube service nginx-service --url</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>http://127.0.0.1:38257</code></p> <p>Laissez le terminal ouvert pour maintenir le tunnel actif.</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#docker-desktop","title":"Docker Desktop","text":"<p>Accessible directement via :</p> <p>plaintext</p> <p><code>http://localhost:&lt;NodePort&gt;</code></p> <p>Par exemple : <code>http://localhost:31220</code>.</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#commande-kubectl-describe","title":"Commande <code>kubectl describe</code>","text":"<p>La commande <code>kubectl describe</code> fournit des informations d\u00e9taill\u00e9es sur une ressource Kubernetes sp\u00e9cifique.</p> <p>Exemple pour d\u00e9crire un Service :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl describe services nginx-service</code></p> <p>Cette commande retourne des d\u00e9tails techniques sur le Service, comme ses s\u00e9lecteurs, ses ports, et ses endpoints.</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_2_Introduction_aux_principaux_objets_Kubernetes/e_Introduction_aux_Services/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les Services connectent les Pods aux consommateurs (internes ou externes) et permettent de g\u00e9rer dynamiquement les changements dans le cluster.</li> <li>Types de Services courants :<ul> <li>ClusterIP : Acc\u00e8s interne uniquement.</li> <li>NodePort : Acc\u00e8s externe via <code>&lt;IP&gt;:&lt;NodePort&gt;</code>.</li> <li>LoadBalancer : Acc\u00e8s via un \u00e9quilibreur de charge.</li> <li>ExternalName : Redirection vers un service externe.</li> </ul> </li> <li>Les labels jouent un r\u00f4le cl\u00e9 dans la s\u00e9lection des Pods cibles.</li> </ul> <p>Les Services sont essentiels pour exposer les applications \u00e0 l\u2019ext\u00e9rieur ou au sein d\u2019un cluster Kubernetes.</p>","tags":["Principaux_Objet/Introduction_Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/Les_fondamentaux_sur_les_objets_Kubernetes/","title":"Les fondamentaux sur les objets Kubernetes","text":"<p>[[a) Cycle de vie des Pods et des conteneurs]]</p> <p>[[b)Les labels et les s\u00e9lecteurs]]</p> <p>[[c)Les ReplicaSets]]</p> <p>[[d)Les D\u00e9ployments en d\u00e9tail]]</p> <p>[[e)Les Services en d\u00e9tail]]</p> <p>[[f)Les Namespaces]]</p>"},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/","title":"a Cycle de vie des Pods et des conteneurs","text":"","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#duree-de-vie-dun-pod","title":"Dur\u00e9e de vie d'un Pod","text":"<p>Les Pods sont des objets \u00e9ph\u00e9m\u00e8res et non durables dans Kubernetes. Lorsqu'un Pod est cr\u00e9\u00e9, il re\u00e7oit un ID unique et est assign\u00e9 \u00e0 un n\u0153ud. Si le n\u0153ud devient indisponible, les Pods qu\u2019il h\u00e9berge sont supprim\u00e9s, et Kubernetes en cr\u00e9e de nouveaux pour les remplacer.</p> <p>Important : Les Pods recr\u00e9\u00e9s auront un nouvel ID, ce seront donc des entit\u00e9s distinctes.</p>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#phases-dun-pod","title":"Phases d'un Pod","text":"<p>Un Pod passe par plusieurs phases dans son cycle de vie. Ces phases refl\u00e8tent un r\u00e9sum\u00e9 de haut niveau de son \u00e9tat :</p> <ol> <li> <p>Pending :</p> <ul> <li>Le Pod est accept\u00e9 par Kubernetes, mais ses conteneurs ne sont pas encore cr\u00e9\u00e9s.</li> <li>Cela inclut le temps n\u00e9cessaire pour planifier le Pod ou t\u00e9l\u00e9charger les images.</li> <li> <p>Running :</p> </li> <li> <p>Le Pod est li\u00e9 \u00e0 un n\u0153ud, et tous les conteneurs sont en cours d'ex\u00e9cution ou d\u00e9marrent.</p> </li> <li> <p>Succeeded :</p> </li> <li> <p>Tous les conteneurs se sont termin\u00e9s avec succ\u00e8s et ne red\u00e9marrent pas.</p> </li> <li> <p>Failed :</p> </li> <li> <p>Tous les conteneurs se sont arr\u00eat\u00e9s, mais au moins un d'entre eux s'est termin\u00e9 avec une erreur.</p> </li> <li> <p>Unknown :</p> </li> <li> <p>Kubernetes ne peut pas d\u00e9terminer l\u2019\u00e9tat du Pod, g\u00e9n\u00e9ralement \u00e0 cause d\u2019un probl\u00e8me de communication avec le n\u0153ud.</p> </li> </ul> </li> </ol> <p>Statut <code>Terminating</code> : Lorsqu\u2019un Pod est en cours de suppression, il appara\u00eet comme <code>Terminating</code>. Cela n\u2019est pas une phase mais un \u00e9tat temporaire.</p>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#etats-des-conteneurs-dans-un-pod","title":"\u00c9tats des conteneurs dans un Pod","text":"<p>Les conteneurs d'un Pod ont leurs propres \u00e9tats, ind\u00e9pendamment de la phase du Pod :</p> <ol> <li> <p>Waiting :</p> <ul> <li>Le conteneur est en attente d\u2019ex\u00e9cution (par exemple, t\u00e9l\u00e9chargement d'une image).</li> <li>Une raison est souvent indiqu\u00e9e (par exemple, <code>ImagePullBackOff</code>).</li> <li> <p>Running :</p> </li> <li> <p>Le conteneur est en cours d\u2019ex\u00e9cution.</p> </li> <li>Informations disponibles : heure de d\u00e9marrage, \u00e9tat actuel.</li> <li> <p>Terminated :</p> </li> <li> <p>Le conteneur s'est arr\u00eat\u00e9, volontairement ou \u00e0 cause d\u2019une erreur.</p> </li> <li>Donne des d\u00e9tails sur le code de sortie, la raison, l\u2019heure de d\u00e9but et de fin.</li> </ul> </li> </ol>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#politique-de-redemarrage-des-conteneurs","title":"Politique de red\u00e9marrage des conteneurs","text":"<p>Le champ RestartPolicy dans la sp\u00e9cification du Pod d\u00e9finit comment Kubernetes doit g\u00e9rer les red\u00e9marrages des conteneurs :</p> <ul> <li>Always (par d\u00e9faut) : Les conteneurs red\u00e9marrent toujours.</li> <li>OnFailure : Les conteneurs red\u00e9marrent uniquement en cas d'\u00e9chec.</li> <li>Never : Les conteneurs ne red\u00e9marrent jamais.</li> </ul> <p>Red\u00e9marrage g\u00e9r\u00e9 par kubelet : Si un conteneur \u00e9choue, le kubelet tente de le red\u00e9marrer avec un d\u00e9lai exponentiel plafonn\u00e9 \u00e0 5 minutes.</p>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#conditions-des-pods","title":"Conditions des Pods","text":"<p>Un Pod a un PodStatus qui inclut des conditions. Chaque condition refl\u00e8te une \u00e9tape cl\u00e9 dans son \u00e9tat :</p> <ul> <li>PodScheduled : Le Pod a \u00e9t\u00e9 assign\u00e9 \u00e0 un n\u0153ud.</li> <li>ContainersReady : Tous les conteneurs sont pr\u00eats.</li> <li>Initialized : Toutes les initialisations n\u00e9cessaires ont \u00e9t\u00e9 effectu\u00e9es.</li> <li>Ready : Le Pod peut traiter des requ\u00eates et \u00eatre ajout\u00e9 aux pools d'\u00e9quilibrage de charge.</li> </ul> <p>Commande pour visualiser les conditions :</p> <p>bash</p> <p><code>kubectl describe pods</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p>Copier le code</p> <p><code>Conditions:   Type              Status   Initialized       True   Ready             True   ContainersReady   True   PodScheduled      True</code></p>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#utilisation-de-loption-output-dans-kubectl","title":"Utilisation de l'option <code>--output</code> dans kubectl","text":"<p>L\u2019option <code>--output</code> (ou <code>-o</code>) permet de formater la sortie des commandes kubectl dans diff\u00e9rents formats.</p>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#formats-disponibles","title":"Formats disponibles :","text":"<ol> <li> <p>json : Retourne la configuration compl\u00e8te au format JSON.</p> <p>bash</p> <p><code>kubectl get pods -o json</code></p> </li> <li> <p>yaml : Retourne la configuration compl\u00e8te au format YAML.</p> <p>bash</p> <p><code>kubectl get pods -o yaml</code></p> </li> <li> <p>name : Affiche uniquement les noms des Pods.</p> <p>bash</p> <p><code>kubectl get pods -o name</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>pod/nginx-deployment-676dc4898c-j8dvc</code></p> </li> <li> <p>wide : Fournit des informations suppl\u00e9mentaires (IP, n\u0153ud, etc.).</p> <p>bash</p> <p><code>kubectl get pods -o wide</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>NAME                                READY   STATUS    RESTARTS   AGE   IP            NODE       NOMINATED NODE   READINESS GATES nginx-deployment-676dc4898c-j8dvc   1/1     Running   0          42h   10.244.0.27   minikube   &lt;none&gt;           &lt;none&gt;</code></p> </li> <li> <p>jsonpath : Permet d\u2019extraire des champs sp\u00e9cifiques au format JSON.</p> <p>bash</p> <p><code>kubectl get pods -o jsonpath='{.items[0].metadata.name}'</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>nginx-deployment-676dc4898c-j8dvc</code></p> </li> </ol>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/a_Cycle_de_vie_des_Pods_et_des_conteneurs/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les Pods ont un cycle de vie \u00e9ph\u00e9m\u00e8re. Leur recr\u00e9ation ne conserve pas leur ID.</li> <li>Les phases des Pods offrent un r\u00e9sum\u00e9 de leur \u00e9tat, tandis que les conteneurs ont des \u00e9tats plus d\u00e9taill\u00e9s.</li> <li>Les politiques de red\u00e9marrage d\u00e9finissent le comportement des conteneurs en cas d'\u00e9chec.</li> <li>Les conditions des Pods permettent de suivre leur progression vers un \u00e9tat op\u00e9rationnel.</li> <li>L\u2019option <code>--output</code> dans kubectl facilite l\u2019extraction et la visualisation des informations sur les ressources.</li> <li></li> </ul>","tags":["#Objet/Cycle_de_vie_Pod_et_conteneurs"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/","title":"bLes labels et les s\u00e9lecteurs","text":"","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#rappels-sur-les-labels-et-selectors","title":"Rappels sur les Labels et Selectors","text":"<p>Les labels et selectors constituent les m\u00e9canismes de base pour grouper et identifier des objets dans Kubernetes. Ils permettent de :</p> <ul> <li>Regrouper des objets en fonction de paires cl\u00e9/valeur.</li> <li>Appliquer des configurations sp\u00e9cifiques ou des op\u00e9rations sur ces groupes.</li> </ul>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#labels-dans-kubernetes","title":"Labels dans Kubernetes","text":"<p>Les labels sont des paires cl\u00e9/valeur d\u00e9finies sur les objets Kubernetes. Ils offrent une grande flexibilit\u00e9 pour organiser et g\u00e9rer vos d\u00e9ploiements.</p>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#caracteristiques-des-labels","title":"Caract\u00e9ristiques des labels :","text":"<ul> <li>Pr\u00e9fixe optionnel : Doit \u00eatre un sous-domaine DNS valide.</li> <li>Nom obligatoire :<ul> <li>Limit\u00e9 \u00e0 63 caract\u00e8res.</li> <li>Commence et se termine par un caract\u00e8re alphanum\u00e9rique.</li> <li>Peut contenir des tirets (<code>-</code>), des underscores (<code>_</code>), et des points (<code>.</code>).</li> </ul> </li> <li>Syntaxe : <code>pr\u00e9fixe/nom</code>.</li> </ul>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#exemples-de-labels-recommandes","title":"Exemples de labels recommand\u00e9s :","text":"Label Utilisation <code>app.kubernetes.io/name</code> Nom de l'application (ex. : <code>node</code>). <code>app.kubernetes.io/instance</code> Identifie des instances sp\u00e9cifiques (ex. : <code>node-teamA</code>). <code>app.kubernetes.io/version</code> Version de l'application (ex. : <code>18.16.0</code>). <code>app.kubernetes.io/component</code> Composant sp\u00e9cifique d'une application (ex. : <code>backend</code>). <code>app.kubernetes.io/part-of</code> Indique l'application principale (ex. : <code>web-app</code>). <code>app.kubernetes.io/managed-by</code> Outil de gestion (ex. : <code>helm</code>). <p>Remarque : L'utilisation de ces labels est facultative mais permet une meilleure standardisation.</p>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#selectors-dans-kubernetes","title":"Selectors dans Kubernetes","text":"<p>Les selectors permettent de cibler un ensemble d\u2019objets \u00e0 partir de leurs labels. Ils sont couramment utilis\u00e9s pour les d\u00e9ploiements, Services, et autres objets li\u00e9s.</p>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#types-de-selectors","title":"Types de selectors :","text":"<ol> <li> <p>Bas\u00e9s sur l\u2019\u00e9galit\u00e9 (Equality-based) :</p> <ul> <li>Syntaxe : <code>key=value</code>, <code>key!=value</code>.</li> <li>Tous les crit\u00e8res doivent \u00eatre satisfaits (op\u00e9rateur logique <code>ET</code>).</li> </ul> <p>Exemple YAML :</p> <p>yaml</p> <p><code>selector:   matchLabels:     app: nginx     environment: production</code></p> </li> <li> <p>Bas\u00e9s sur les ensembles (Set-based) :</p> <ul> <li>Permet de filtrer selon un ensemble de valeurs.</li> <li>Op\u00e9rateurs : <code>In</code>, <code>NotIn</code>, <code>Exists</code>, <code>DoesNotExist</code>.</li> </ul> <p>Exemple YAML :</p> <p>yaml</p> <p>Copier le code</p> <p><code>selector:   matchExpressions:     - {key: app, operator: In, values: [nginx, mysql]}</code></p> </li> </ol>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#exemples-de-commandes-avec-selectors","title":"Exemples de commandes avec selectors :","text":"<ul> <li> <p>Bas\u00e9s sur l\u2019\u00e9galit\u00e9 :</p> <p>bash</p> <p><code>kubectl get pods -l app=nginx</code></p> </li> <li> <p>Bas\u00e9s sur les ensembles :</p> <p>bash</p> <p><code>kubectl get pods -l 'app in (nginx, mysql)'</code></p> </li> </ul>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#utilisation-des-labels-et-selectors-avec-kubectl","title":"Utilisation des labels et selectors avec kubectl","text":"","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#afficher-les-labels-avec-show-labels","title":"Afficher les labels avec <code>--show-labels</code> :","text":"<p>Affiche les labels associ\u00e9s \u00e0 chaque ressource :</p> <p>bash</p> <p><code>kubectl get pods --show-labels</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>NAME                                READY   STATUS    RESTARTS   AGE   LABELS nginx-deployment-676dc4898c-j8dvc   1/1     Running   0          41h   app=nginx,pod-template-hash=676dc4898c</code></p>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#selectionner-des-ressources-avec-l-ou-selector","title":"S\u00e9lectionner des ressources avec <code>-l</code> ou <code>--selector</code> :","text":"<p>Filtre les ressources selon leurs labels :</p> <p>bash</p> <p><code>kubectl get pods -l app=nginx</code></p> <p>Combinaisons avanc\u00e9es avec des op\u00e9rateurs :</p> <p>bash</p> <p><code>kubectl get pods -l 'app in (nginx, mysql)'</code></p>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#creer-des-groupes-logiques-avec-des-labels","title":"Cr\u00e9er des groupes logiques avec des labels","text":"<p>Exemples de labels courants :</p> <ul> <li>Environment : <code>environment=dev</code>, <code>environment=prod</code>.</li> <li>Tier : <code>tier=frontend</code>, <code>tier=backend</code>, <code>tier=cache</code>.</li> </ul> <p>Fichier YAML avec des labels :</p> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: example-pod\n  labels:\n    app: nginx\n    environment: production\nspec:\n  containers:\n  - name: nginx-container\n    image: nginx:alpine\n</code></pre>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/bLes_labels_et_les_s%C3%A9lecteurs/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Labels : Identifient et organisent les objets Kubernetes.</li> <li>Selectors : Groupent les objets pour appliquer des op\u00e9rations sp\u00e9cifiques.</li> <li>Types de selectors :<ul> <li>Bas\u00e9s sur l'\u00e9galit\u00e9 (<code>key=value</code>, <code>key!=value</code>).</li> <li>Bas\u00e9s sur les ensembles (<code>In</code>, <code>NotIn</code>, <code>Exists</code>, <code>DoesNotExist</code>).</li> </ul> </li> <li>Les conventions de labels recommand\u00e9es permettent une meilleure standardisation des d\u00e9ploiements.</li> <li>Les options <code>--show-labels</code> et <code>-l</code> dans kubectl facilitent la gestion et la visualisation des labels.</li> </ul>","tags":["#Objet/Labels_et_s\u00e9lecteur"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/","title":"cLes ReplicaSets","text":"","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#quest-ce-quun-replicaset","title":"Qu'est-ce qu'un ReplicaSet ?","text":"<p>Un ReplicaSet est un objet Kubernetes utilis\u00e9 pour garantir qu\u2019un nombre sp\u00e9cifique de copies (r\u00e9plicas) d\u2019un Pod est maintenu dans le cluster. Il assure la haute disponibilit\u00e9 et la redondance des Pods.</p> <ul> <li>Si un Pod tombe en panne ou est supprim\u00e9, le ReplicaSet cr\u00e9e automatiquement un nouveau Pod pour maintenir le nombre sp\u00e9cifi\u00e9 de r\u00e9plicas.</li> <li>Les ReplicaSets utilisent des s\u00e9lecteurs de labels pour identifier les Pods \u00e0 g\u00e9rer.</li> </ul>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#fonctionnement-dun-replicaset","title":"Fonctionnement d'un ReplicaSet","text":"<p>Un ReplicaSet est d\u00e9fini avec les champs suivants :</p> <ol> <li> <p>S\u00e9lecteur :</p> <ul> <li>D\u00e9termine quels Pods le ReplicaSet doit g\u00e9rer.</li> <li>Bas\u00e9 sur les labels des Pods.</li> <li> <p>Nombre de r\u00e9plicas :</p> </li> <li> <p>Indique combien de Pods doivent \u00eatre actifs en m\u00eame temps.</p> </li> <li> <p>Template de Pod :</p> </li> <li> <p>Mod\u00e8le utilis\u00e9 pour cr\u00e9er de nouveaux Pods si n\u00e9cessaire.</p> </li> </ul> </li> </ol>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#relation-entre-replicaset-et-pods","title":"Relation entre ReplicaSet et Pods :","text":"<ul> <li>Les Pods cr\u00e9\u00e9s par un ReplicaSet contiennent une r\u00e9f\u00e9rence dans leur champ <code>metadata.ownerReferences</code>, indiquant qu\u2019ils sont g\u00e9r\u00e9s par ce ReplicaSet.</li> <li> <p>Exemple de sortie avec <code>kubectl describe pods</code> :</p> <p>plaintext</p> <p>Copier le code</p> <p><code>Controlled By:  ReplicaSet/nginx-deployment-5956959495</code></p> </li> </ul>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#quand-utiliser-un-replicaset","title":"Quand utiliser un ReplicaSet ?","text":"<p>En pratique, les ReplicaSets sont rarement utilis\u00e9s directement. Ils sont principalement utilis\u00e9s indirectement via des Deployments, qui offrent une gestion plus riche (mises \u00e0 jour, rollbacks, etc.).</p> <p>Recommandation officielle de Kubernetes : Utilisez des Deployments plut\u00f4t que des ReplicaSets directement.</p>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#exemple-pratique-observer-un-replicaset","title":"Exemple pratique : Observer un ReplicaSet","text":"<ol> <li> <p>V\u00e9rifier le ReplicaSet associ\u00e9 \u00e0 un Deployment :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl describe replicaset</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p><code>Name:           nginx-deployment-5956959495 Namespace:      default Selector:       app=nginx,pod-template-hash=5956959495 Labels:         app=nginx                 pod-template-hash=5956959495 Controlled By:  Deployment/nginx-deployment Replicas:       1 current / 1 desired Pods Status:    1 Running / 0 Waiting / 0 Succeeded / 0 Failed</code></p> <p>Points cl\u00e9s :</p> <ul> <li>Selector : D\u00e9termine les Pods g\u00e9r\u00e9s (<code>app=nginx</code>).</li> <li>Replicas : Nombre actuel et souhait\u00e9 de Pods.</li> <li>Controlled By : Indique que ce ReplicaSet est g\u00e9r\u00e9 par un Deployment.</li> <li> <p>Simuler la suppression d\u2019un Pod g\u00e9r\u00e9 par un ReplicaSet :</p> </li> <li> <p>Listez les Pods :</p> <p>bash</p> <p><code>kubectl get pods</code></p> </li> <li> <p>Supprimez un Pod sp\u00e9cifique :</p> <p>bash</p> <p><code>kubectl delete pod &lt;nom-du-pod&gt;</code></p> </li> <li> <p>Observez le comportement du ReplicaSet :</p> <p>bash</p> <p><code>kubectl get pods</code></p> </li> </ul> <p>Constat :</p> <ul> <li>Le ReplicaSet recr\u00e9e automatiquement le Pod supprim\u00e9 pour maintenir le nombre de r\u00e9plicas sp\u00e9cifi\u00e9.</li> </ul> </li> </ol>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/cLes_ReplicaSets/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Un ReplicaSet garantit la disponibilit\u00e9 d\u2019un nombre d\u00e9fini de Pods dans le cluster.</li> <li>Il est principalement utilis\u00e9 via des Deployments pour simplifier la gestion des applications.</li> <li>Les ReplicaSets surveillent et recr\u00e9ent automatiquement les Pods en cas de panne ou de suppression.</li> <li>Bien que rarement manipul\u00e9s directement, leur r\u00f4le est fondamental pour assurer la stabilit\u00e9 des applications dans Kubernetes.</li> </ul>","tags":["#Objet/Replicaset"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/","title":"dLes D\u00e9ployments en d\u00e9tail","text":"","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#modification-dun-deploiement-kubernetes","title":"Modification d\u2019un d\u00e9ploiement Kubernetes","text":"<p>Les d\u00e9ploiements Kubernetes permettent de g\u00e9rer le cycle de vie des applications, y compris leur mise \u00e0 jour, mise \u00e0 l'\u00e9chelle et rollback.</p>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#mise-a-jour-du-nombre-de-replicas","title":"Mise \u00e0 jour du nombre de r\u00e9plicas","text":"<ol> <li> <p>Exemple de fichier YAML modifi\u00e9 :</p> <p>apiVersion: apps/v1 kind: Deployment metadata:   name: nginx-deployment spec:   replicas: 3   selector:     matchLabels:       app: nginx   template:     metadata:       labels:         app: nginx     spec:       containers:       - name: nginx-container         image: nginx:alpine         ports:         - containerPort: 80 2. Appliquer les modifications :</p> <p>bash</p> <p><code>kubectl apply -f mon-premier-deploiement.yaml</code></p> </li> <li> <p>V\u00e9rifier les ressources avec <code>kubectl get all</code> :</p> <ul> <li>R\u00e9sultat :<ul> <li>Pods : 3 r\u00e9plicas, tous pr\u00eats.</li> <li>Deployments : 3 Pods disponibles.</li> <li>ReplicaSets : 3 Pods dans le ReplicaSet.</li> </ul> </li> </ul> </li> </ol>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#details-sur-la-configuration","title":"D\u00e9tails sur la configuration","text":"<ul> <li><code>metadata &gt; name</code> : D\u00e9finit le nom du d\u00e9ploiement, qui devient le pr\u00e9fixe pour les ReplicaSets et Pods.</li> <li><code>spec &gt; replicas</code> : D\u00e9finit le nombre souhait\u00e9 de r\u00e9plicas.</li> <li><code>selector &gt; matchLabels</code> : Indique comment le ReplicaSet s\u00e9lectionne les Pods qu'il doit g\u00e9rer.</li> <li><code>template &gt; metadata &gt; labels</code> : Ajoute des labels aux Pods cr\u00e9\u00e9s.</li> <li><code>template &gt; spec</code> : D\u00e9finit les d\u00e9tails des Pods (conteneurs, images, ports).</li> </ul>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#mise-a-jour-dun-deploiement","title":"Mise \u00e0 jour d\u2019un d\u00e9ploiement","text":"<ol> <li> <p>Changer l\u2019image utilis\u00e9e : Exemple : Passer de <code>nginx:alpine</code> \u00e0 <code>nginx</code>.</p> <p>yaml</p> <p><code>spec:   containers:   - name: nginx-container     image: nginx</code></p> </li> <li> <p>Appliquer les modifications :</p> <p>bash</p> <p><code>kubectl apply -f mon-premier-deploiement.yaml</code></p> </li> <li> <p>Observer les ReplicaSets :</p> <p>bash</p> <p><code>kubectl get rs --show-labels</code></p> <p>R\u00e9sultat :</p> <p>plaintext</p> <p><code>NAME                          DESIRED   CURRENT   READY   AGE nginx-deployment-5956959495   2         3         3       2d23h nginx-deployment-758d787cb    1         1         1       70s</code></p> </li> <li> <p>V\u00e9rifier les Pods :</p> <p>bash</p> <p><code>kubectl get pods --show-labels</code></p> </li> </ol>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#rolling-update","title":"Rolling update","text":"<p>Lors d\u2019une mise \u00e0 jour, Kubernetes effectue un rolling update, garantissant une disponibilit\u00e9 minimale des Pods :</p> <ul> <li>Minimum Pods disponibles : 75% (par d\u00e9faut).</li> <li>Surplus maximal : 125% (par d\u00e9faut).</li> </ul> <p>Observer le processus :</p> <p>bash</p> <p><code>kubectl describe deployments</code></p> <p>Sortie typique des \u00e9v\u00e9nements :</p> <p>plaintext</p> <p><code>Scaled up replica set nginx-deployment-758d787cb to 1 Scaled down replica set nginx-deployment-5956959495 to 2 from 3 Scaled up replica set nginx-deployment-758d787cb to 3 from 2</code></p>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#rollback","title":"Rollback","text":"<ol> <li> <p>Exemple de modification entra\u00eenant un \u00e9chec :</p> <p>yaml</p> <p><code>spec:   containers:   - name: nginx-container     image: nginx:1.442</code></p> </li> <li> <p>R\u00e9sultat :</p> <ul> <li>Le d\u00e9ploiement \u00e9choue avec <code>ImagePullBackOff</code> (image inexistante).</li> <li> <p>Pour v\u00e9rifier :</p> <p>bash</p> <p><code>kubectl rollout status deployment</code></p> </li> </ul> </li> <li> <p>Effectuer un rollback :</p> <p>bash</p> <p><code>kubectl rollout undo deployment</code></p> </li> <li> <p>V\u00e9rifier le rollback :</p> <p>bash</p> <p><code>kubectl rollout status deployment</code></p> </li> </ol>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#historique-des-deploiements","title":"Historique des d\u00e9ploiements","text":"<ol> <li> <p>Annoter un d\u00e9ploiement :</p> <p>bash</p> <p><code>kubectl annotate deployments nginx-deployment kubernetes.io/change-cause=\"Use image 1.24\"</code></p> </li> <li> <p>Afficher l\u2019historique :</p> <p>bash</p> <p><code>kubectl rollout history deployment</code></p> </li> <li> <p>Afficher les d\u00e9tails d\u2019une r\u00e9vision sp\u00e9cifique :</p> <p>bash</p> <p><code>kubectl rollout history deployment --revision=2</code></p> </li> <li> <p>Effectuer un rollback vers une r\u00e9vision sp\u00e9cifique :</p> <p>bash</p> <p><code>kubectl rollout undo deployment --to-revision=2</code></p> </li> </ol>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#mise-a-lechelle","title":"Mise \u00e0 l\u2019\u00e9chelle","text":"<ol> <li> <p>M\u00e9thode d\u00e9clarative (recommand\u00e9e) :</p> <ul> <li> <p>Modifier le fichier YAML :</p> <p>yaml</p> <p><code>spec:   replicas: 10</code></p> </li> <li> <p>Appliquer les modifications :</p> <p>bash</p> <p><code>kubectl apply -f mon-premier-deploiement.yaml</code></p> </li> </ul> </li> <li> <p>M\u00e9thode imp\u00e9rative (non recommand\u00e9e) :</p> <p>bash</p> <p><code>kubectl scale deployment nginx-deployment --replicas=10</code></p> </li> <li> <p>V\u00e9rifier :</p> <p>bash</p> <p><code>kubectl get deployment</code></p> </li> </ol>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/dLes_D%C3%A9ployments_en_d%C3%A9tail/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les d\u00e9ploiements Kubernetes permettent de g\u00e9rer facilement la mise \u00e0 jour, la mise \u00e0 l\u2019\u00e9chelle, et le rollback des applications.</li> <li>Les rolling updates garantissent une disponibilit\u00e9 continue.</li> <li>Les annotations facilitent le suivi des modifications.</li> <li>Les rollbacks permettent de revenir \u00e0 un \u00e9tat stable en cas d\u2019erreur.</li> </ul>","tags":["#Objet/D\u00e9ployments_en_d\u00e9tail"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/","title":"eLes Services en d\u00e9tail","text":"","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#rappels-sur-les-services-kubernetes","title":"Rappels sur les Services Kubernetes","text":"<p>Un Service dans Kubernetes sert \u00e0 exposer des Pods (individuellement ou en groupe) \u00e0 d'autres applications ou au trafic externe, tout en offrant un d\u00e9couplage entre les consommateurs et les producteurs de services.</p>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#definir-un-service","title":"D\u00e9finir un Service","text":"<p>Exemple de d\u00e9finition simple :</p> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: mon-service\nspec:\n  selector:\n    app.kubernetes.io/name: MonApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9376\n</code></pre> <ul> <li><code>selector</code> : Identifie les Pods cibles (ici ceux avec le label <code>app.kubernetes.io/name: MonApp</code>).</li> <li><code>port</code> : Port utilis\u00e9 par d'autres applications au sein du cluster.</li> <li><code>targetPort</code> : Port du conteneur \u00e0 l'int\u00e9rieur du Pod.</li> </ul>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#nommer-les-ports","title":"Nommer les ports","text":"<p>Kubernetes permet de nommer les ports, facilitant leur identification et la gestion des modifications.</p> <p>Exemple avec un Deployment et un Service :</p> <p>Deployment YAML :</p> <p>yaml</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx-container\n        image: nginx:alpine\n        ports:\n          - containerPort: 80\n            name: http-nginx\n</code></pre> <p>Service YAML :</p> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: NodePort\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: http-nginx\n</code></pre> <p>Appliquer ces fichiers :</p> <p>bash</p> <p><code>kubectl apply -f mon-premier-deploiement.yaml</code>kubectl apply -f mon-premier-service.yaml</p>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#exposer-plusieurs-ports","title":"Exposer plusieurs ports","text":"<p>Pour exposer plusieurs ports dans un Service, chaque port doit avoir un nom unique :</p> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: NodePort\n  selector:\n    app: nginx\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: http-nginx\n    - name: https\n      protocol: TCP\n      port: 443\n      targetPort: https-nginx\n</code></pre> <p>Remarque : La configuration de HTTPS n\u00e9cessite des r\u00e9glages suppl\u00e9mentaires au niveau de NGINX.</p>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#types-de-services-kubernetes","title":"Types de Services Kubernetes","text":"","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#1-clusterip-par-defaut","title":"1. ClusterIP (par d\u00e9faut)","text":"<ul> <li>Fournit une communication interne au cluster.</li> <li>Utilis\u00e9 pour connecter des composants comme les frontends et backends.</li> </ul>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#2-nodeport","title":"2. NodePort","text":"<ul> <li>Permet un acc\u00e8s externe au cluster via <code>&lt;IP-du-n\u0153ud&gt;:&lt;NodePort&gt;</code>.</li> <li>Exemple :</li> </ul> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: NodePort\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n      nodePort: 30007\n</code></pre> <ul> <li>Plage des ports : <code>30000-32767</code>.</li> </ul>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#3-loadbalancer","title":"3. LoadBalancer","text":"<ul> <li>N\u00e9cessite un fournisseur cloud compatible (GCP, AWS, Azure, etc.).</li> <li>Cr\u00e9e un \u00e9quilibreur de charge externe et attribue une adresse IP externe.</li> <li>Statut publi\u00e9 sous <code>status &gt; loadBalancer</code>.</li> </ul>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#4-externalname","title":"4. ExternalName","text":"<ul> <li>Refl\u00e8te un service situ\u00e9 en dehors du cluster.</li> <li>Exemple : connecter une base PostgreSQL h\u00e9berg\u00e9e sur AWS RDS.</li> </ul> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: postgres-db\nspec:\n  type: ExternalName\n  externalName: mydatabase.abcdefghij.us-east-1.rds.amazonaws.com\n</code></pre> <ul> <li>Exemple pour un Bucket S3 :</li> </ul> <p>yaml</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: mon-super-s3\nspec:\n  type: ExternalName\n  externalName: my-s3-bucket.s3.amazonaws.com\n</code></pre>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#resume-des-types-de-services","title":"R\u00e9sum\u00e9 des types de Services","text":"Type Accessibilit\u00e9 Cas d'usage ClusterIP Interne au cluster uniquement. Communication entre applications au sein du cluster. NodePort Externe via <code>&lt;IP&gt;:&lt;NodePort&gt;</code>. Acc\u00e8s externe direct ou \u00e9quilibrage manuel. LoadBalancer Externe via un \u00e9quilibreur de charge. Production sur un fournisseur cloud. ExternalName R\u00e9solution DNS vers un service externe. Connexion \u00e0 des bases de donn\u00e9es ou services cloud.","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/eLes_Services_en_d%C3%A9tail/#commandes-utiles-avec-services","title":"Commandes utiles avec Services","text":"<ol> <li> <p>Lister les Services :</p> <p>bash</p> <p><code>kubectl get services</code></p> </li> <li> <p>Obtenir des d\u00e9tails :</p> <p>bash</p> <p><code>kubectl describe service &lt;service-name&gt;</code></p> </li> <li> <p>V\u00e9rifier l\u2019acc\u00e8s dans Minikube :</p> <p>bash</p> <p><code>minikube service &lt;service-name&gt; --url</code></p> </li> </ol>","tags":["#Objet/Service"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/","title":"fLes Namespaces","text":"","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#quest-ce-quun-namespace","title":"Qu'est-ce qu'un Namespace  ?","text":"<p>Un Namespace est une couche d\u2019isolation logique dans Kubernetes, permettant de partitionner un cluster en environnements virtuels distincts.</p> <ul> <li>Port\u00e9e des ressources :<ul> <li>Les noms des ressources dans un Namespace doivent \u00eatre uniques.</li> <li>Certains objets, comme les Nodes ou les PersistentVolumes, sont globaux et ne sont pas affect\u00e9s par les Namespaces.</li> </ul> </li> </ul>","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#namespaces-par-defaut","title":"Namespaces par d\u00e9faut","text":"<p>Kubernetes cr\u00e9e automatiquement plusieurs Namespaces :</p> <ol> <li> <p><code>default</code> :</p> <ul> <li>Namespace par d\u00e9faut o\u00f9 les ressources sont plac\u00e9es si aucun Namespace n\u2019est sp\u00e9cifi\u00e9.</li> <li> <p><code>kube-system</code> :</p> </li> <li> <p>Contient les objets syst\u00e8me g\u00e9r\u00e9s par Kubernetes (par ex., contr\u00f4leurs, planificateur).</p> </li> <li> <p><code>kube-public</code> :</p> </li> <li> <p>Lisible par tous les utilisateurs.</p> </li> <li>Utilis\u00e9 pour des ressources accessibles \u00e0 tous.</li> <li> <p><code>kube-node-lease</code> :</p> </li> <li> <p>Contient des objets Node Lease, qui servent aux heartbeats des n\u0153uds pour signaler leur \u00e9tat au plan de contr\u00f4le.</p> </li> </ul> </li> </ol>","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#pourquoi-utiliser-des-namespaces","title":"Pourquoi utiliser des Namespaces ?","text":"<p>Les Namespaces sont utiles dans des environnements complexes pour :</p> <ol> <li> <p>Isolation des ressources :</p> <ul> <li>Permet de regrouper les ressources par projet, \u00e9quipe ou application.</li> <li> <p>Gestion des quotas :</p> </li> <li> <p>Associez des quotas de ressources (CPU, m\u00e9moire) \u00e0 chaque Namespace.</p> </li> <li> <p>Contr\u00f4le d\u2019acc\u00e8s (RBAC) :</p> </li> <li> <p>Les r\u00e8gles de contr\u00f4le d'acc\u00e8s bas\u00e9es sur les r\u00f4les peuvent \u00eatre appliqu\u00e9es au niveau du Namespace.</p> </li> </ul> </li> </ol>","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ul> <li>Kubernetes recommande de n'utiliser les Namespaces que dans des environnements avec plusieurs dizaines d\u2019utilisateurs ou projets.</li> <li>Pour diff\u00e9rencier les environnements comme test, staging, ou production, pr\u00e9f\u00e9rez utiliser des labels au sein d\u2019un m\u00eame Namespace.</li> </ul>","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#commandes-liees-aux-namespaces","title":"Commandes li\u00e9es aux Namespaces","text":"<ol> <li> <p>Cr\u00e9er un Namespace :</p> <p>bash</p> <p><code>kubectl create namespace mon-namespace</code></p> </li> <li> <p>Lister les Namespaces :</p> <p>bash</p> <p><code>kubectl get namespaces</code></p> </li> <li> <p>Cr\u00e9er une ressource dans un Namespace sp\u00e9cifique :</p> <p>bash</p> <p><code>kubectl create -f mon-pod.yaml -n mon-namespace</code></p> </li> <li> <p>Lister les ressources dans un Namespace sp\u00e9cifique :</p> <p>bash</p> <p><code>kubectl get pods -n mon-namespace</code></p> </li> <li> <p>Supprimer un Namespace :</p> <p>bash</p> <p><code>kubectl delete namespaces mon-namespace</code></p> </li> </ol>","tags":["#Objet/Namespace"]},{"location":"Chap_3_Les_fondamentaux_sur_les_objets_Kubernetes/fLes_Namespaces/#resume-des-avantages-des-namespaces","title":"R\u00e9sum\u00e9 des avantages des Namespaces","text":"Avantage Description Isolation des ressources Partitionner les ressources pour diff\u00e9rents projets ou applications. Gestion des quotas Limiter l\u2019utilisation de CPU et de m\u00e9moire pour chaque Namespace. Contr\u00f4le d\u2019acc\u00e8s (RBAC) Appliquer des politiques de s\u00e9curit\u00e9 sp\u00e9cifiques \u00e0 chaque Namespace.","tags":["#Objet/Namespace"]},{"location":"Chap_5_Introduction_Aux_Ingress/Introduction_aux_Ingress/","title":"Introduction aux Ingress","text":"<p>[[a) Qu'est ce qu'un Ingress ?]]</p> <p>[[b) Les Composants d'un Ingress]]</p> <p>[[c) Les r\u00e8gles Ingress]]</p> <p>[[d) Utiliser un Ingress avec Minikube]]</p>"},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/","title":"a Qu'est ce qu'un Ingress ?","text":"","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#quest-ce-quun-ingress","title":"Qu'est-ce qu'un Ingress ?","text":"<p>Un Ingress dans Kubernetes est une entr\u00e9e r\u00e9seau permettant d\u2019exposer des services HTTP ou HTTPS \u00e0 l'ext\u00e9rieur d'un cluster Kubernetes. Il sert de point d\u2019entr\u00e9e pour acheminer le trafic entrant vers les services appropri\u00e9s.</p>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#possibilites-offertes-par-un-ingress","title":"Possibilit\u00e9s offertes par un Ingress","text":"<ol> <li> <p>Exposition d\u2019applications web :</p> <ul> <li>Permet d\u2019exposer des applications web h\u00e9berg\u00e9es dans le cluster sur des URLs accessibles depuis Internet ou d'autres r\u00e9seaux externes.</li> <li> <p>Gestion du trafic :</p> </li> <li> <p>Routage bas\u00e9 sur des r\u00e8gles sp\u00e9cifiques :</p> <ul> <li>URI : Acheminer le trafic en fonction des chemins d'URL.</li> <li>Noms d'h\u00f4tes virtuels : Redirection selon le domaine (ex. : <code>app.example.com</code>).</li> <li>En-t\u00eates HTTP : Acheminer selon des m\u00e9tadonn\u00e9es sp\u00e9cifiques.</li> </ul> </li> <li> <p>TLS et chiffrement :</p> </li> <li> <p>G\u00e8re la terminaison TLS pour s\u00e9curiser les connexions HTTPS.</p> </li> <li>Assure la confidentialit\u00e9 et l\u2019int\u00e9grit\u00e9 des donn\u00e9es \u00e9chang\u00e9es.</li> <li> <p>Gestion des noms d\u2019h\u00f4tes virtuels :</p> </li> <li> <p>H\u00e9berge plusieurs sites ou applications sur une m\u00eame adresse IP gr\u00e2ce \u00e0 des noms d\u2019h\u00f4tes distincts (par exemple : <code>site1.example.com</code> et <code>site2.example.com</code>).</p> </li> </ul> </li> </ol>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#fonctionnement-dun-ingress","title":"Fonctionnement d\u2019un Ingress","text":"<ol> <li> <p>Requ\u00eate entrante :</p> <ul> <li>Un client externe (navigateur web ou application) envoie une requ\u00eate HTTP ou HTTPS.</li> <li> <p>Traitement par le contr\u00f4leur d\u2019Ingress :</p> </li> <li> <p>Le contr\u00f4leur d\u2019Ingress re\u00e7oit la requ\u00eate et compare ses d\u00e9tails (URL, domaine, en-t\u00eates) aux r\u00e8gles d\u00e9finies dans la ressource Ingress.</p> </li> <li> <p>Routage vers un Service Kubernetes :</p> </li> <li> <p>Si la requ\u00eate correspond \u00e0 une r\u00e8gle :</p> <ul> <li>Le contr\u00f4leur achemine la requ\u00eate vers le Service correspondant.</li> </ul> </li> <li>Si aucune r\u00e8gle ne correspond et qu\u2019un backend par d\u00e9faut est configur\u00e9 :<ul> <li>La requ\u00eate est achemin\u00e9e vers ce backend par d\u00e9faut.</li> </ul> </li> <li> <p>Transfert vers un Pod :</p> </li> <li> <p>Le Service transmet la requ\u00eate au Pod appropri\u00e9 (en fonction de ses r\u00e8gles internes).</p> </li> <li> <p>Retour de la r\u00e9ponse :</p> </li> <li> <p>Le Pod g\u00e8re la requ\u00eate et renvoie une r\u00e9ponse qui suit le m\u00eame chemin (en sens inverse) jusqu\u2019au client.</p> </li> </ul> </li> </ol>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#resume-des-etapes","title":"R\u00e9sum\u00e9 des \u00e9tapes :","text":"<ol> <li>Requ\u00eate client \u2192 Ingress.</li> <li>Ingress Controller applique les r\u00e8gles.</li> <li>Routage vers le Service correspondant.</li> <li>Service \u2192 Pod appropri\u00e9.</li> <li>Pod \u2192 R\u00e9ponse retourn\u00e9e au client.</li> </ol>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#cas-dusage-des-ingress","title":"Cas d\u2019usage des Ingress","text":"<ul> <li>H\u00e9bergement multi-domaines : H\u00e9berger plusieurs applications sur une m\u00eame adresse IP, diff\u00e9renci\u00e9es par leurs noms d\u2019h\u00f4tes.</li> <li>S\u00e9curisation : Utilisation du protocole HTTPS pour les communications.</li> <li>Gestion de trafic avanc\u00e9e : Acheminer le trafic vers diff\u00e9rentes versions d'une application ou appliquer des r\u00e8gles sp\u00e9cifiques selon les besoins.</li> </ul>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#illustration","title":"Illustration","text":"<p>Voici une repr\u00e9sentation sch\u00e9matique d\u2019un Ingress dans Kubernetes :</p> <p>plaintext</p> <p><code>[Client externe] ---&gt; [Ingress] ---&gt; [Service] ---&gt; [Pod(s)]</code></p>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/a_Qu%27est_ce_qu%27un_Ingress_%3F/#prochaines-etapes-dans-la-formation","title":"Prochaines \u00e9tapes dans la formation","text":"<p>Dans les prochaines le\u00e7ons, nous approfondirons :</p> <ul> <li>Configuration d\u2019un Ingress (cr\u00e9ation et gestion des r\u00e8gles).</li> <li>Int\u00e9gration avec des certificats TLS.</li> <li>Installation et gestion d\u2019un contr\u00f4leur d\u2019Ingress.</li> </ul>","tags":["#Intro_Ingress/Qu_est_ce_que_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/","title":"b Les Composants d'un Ingress","text":"","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#la-ressource-ingress","title":"La ressource Ingress","text":"<p>Un Ingress est une ressource Kubernetes contenant les r\u00e8gles de routage pour le trafic entrant dans le cluster. Ces r\u00e8gles d\u00e9terminent comment les requ\u00eates HTTP(S) sont achemin\u00e9es en fonction de :</p> <ul> <li>L\u2019h\u00f4te : Le domaine ou le sous-domaine.</li> <li>Le chemin : L'URI ou le pr\u00e9fixe de l\u2019URL.</li> <li>Le Service backend : Le service Kubernetes vers lequel diriger la requ\u00eate.</li> </ul>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#quest-ce-quun-controleur-ingress","title":"Qu'est-ce qu'un contr\u00f4leur Ingress ?","text":"<p>Le contr\u00f4leur Ingress est un composant essentiel qui g\u00e8re le fonctionnement de la ressource Ingress. Son r\u00f4le principal est de :</p> <ol> <li>Surveiller les ressources Ingress dans le cluster.</li> <li>Configurer dynamiquement un proxy inverse (reverse proxy) pour rediriger le trafic vers les Services backend.</li> <li>G\u00e9rer les modifications apport\u00e9es aux Ingress et adapter la configuration en temps r\u00e9el.</li> </ol>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#controleurs-ingress-officiels-et-populaires","title":"Contr\u00f4leurs Ingress officiels et populaires","text":"<ul> <li> <p>Officiels maintenus par Kubernetes :</p> <ul> <li>AWS ALB : Sp\u00e9cifique \u00e0 AWS.</li> <li>Google Cloud Load Balancer : Int\u00e9gr\u00e9 \u00e0 GCP.</li> <li>NGINX Ingress : G\u00e9n\u00e9raliste et largement utilis\u00e9.</li> <li> <p>Autres contr\u00f4leurs populaires (au moins 30 disponibles) :</p> </li> <li> <p>Traefik : Int\u00e9gr\u00e9 avec Docker et Kubernetes.</p> </li> <li>HAProxy Ingress : Performances \u00e9lev\u00e9es.</li> <li>Contour : Sp\u00e9cialis\u00e9 pour les architectures modernes.</li> </ul> </li> </ul> <p>Remarque : Chaque contr\u00f4leur a ses sp\u00e9cificit\u00e9s et convient \u00e0 des besoins diff\u00e9rents. Le choix d\u00e9pend de l'infrastructure et des fonctionnalit\u00e9s requises.</p>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#exemple-de-configuration-dune-ressource-ingress","title":"Exemple de configuration d\u2019une ressource Ingress","text":"<p>Voici un fichier YAML de base pour une ressource Ingress :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: minimal-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx-example\n  rules:\n  - http:\n      paths:\n      - path: /testpath\n        pathType: Prefix\n        backend:\n          service:\n            name: test\n            port:\n              number: 80\n</code></pre>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#explication-des-champs","title":"Explication des champs :","text":"<ol> <li> <p><code>metadata</code> :</p> <ul> <li><code>name</code> : Nom de la ressource Ingress (<code>minimal-ingress</code> ici).</li> <li><code>annotations</code> : Ajout de m\u00e9tadonn\u00e9es, ici pour indiquer au contr\u00f4leur nginx de r\u00e9\u00e9crire l\u2019URL.</li> <li> <p><code>spec</code> :</p> </li> <li> <p><code>ingressClassName</code> : Sp\u00e9cifie le contr\u00f4leur Ingress \u00e0 utiliser (<code>nginx-example</code> dans cet exemple).</p> </li> <li><code>rules</code> : D\u00e9finit les r\u00e8gles de routage.<ul> <li><code>path</code> : Sp\u00e9cifie le chemin \u00e0 surveiller (<code>/testpath</code>).</li> <li><code>pathType</code> : Indique le type de correspondance du chemin (<code>Prefix</code> signifie que toutes les URL commen\u00e7ant par <code>/testpath</code> sont incluses).</li> <li><code>backend</code> :<ul> <li><code>service.name</code> : Nom du Service cible (<code>test</code> ici).</li> <li><code>service.port.number</code> : Port expos\u00e9 par le Service (<code>80</code> ici).</li> </ul> </li> </ul> </li> </ul> </li> </ol>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#flux-dune-requete-avec-ingress","title":"Flux d'une requ\u00eate avec Ingress","text":"<ol> <li> <p>Requ\u00eate client \u2192 Ingress Controller :</p> <ul> <li>Le contr\u00f4leur d\u2019Ingress re\u00e7oit la requ\u00eate HTTP(S) d'un client externe.</li> <li> <p>Contr\u00f4leur \u2192 Service backend :</p> </li> <li> <p>Il achemine la requ\u00eate vers le Service correspondant, bas\u00e9 sur les r\u00e8gles sp\u00e9cifi\u00e9es dans la ressource Ingress.</p> </li> <li> <p>Service backend \u2192 Pods :</p> </li> <li> <p>Le Service redirige la requ\u00eate vers un Pod disponible qui traite la requ\u00eate.</p> </li> <li> <p>R\u00e9ponse client :</p> </li> <li> <p>La r\u00e9ponse suit le chemin inverse jusqu\u2019au client.</p> </li> </ul> </li> </ol>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/b_Les_Composants_d%27un_Ingress/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Ressource Ingress : Contient les r\u00e8gles pour router le trafic entrant vers les Services backend.</li> <li>Contr\u00f4leur Ingress : Impl\u00e9mente les r\u00e8gles d'Ingress en configurant un proxy inverse.</li> <li>Exemple basique : Configuration d\u2019une r\u00e8gle de routage pour acheminer <code>/testpath</code> vers le Service <code>test</code> sur le port 80.</li> </ul> <p>Dans les prochaines le\u00e7ons, nous explorerons :</p> <ul> <li>L\u2019installation et la configuration de contr\u00f4leurs Ingress.</li> <li>La gestion avanc\u00e9e du trafic avec des r\u00e8gles plus complexes.</li> </ul>","tags":["#Intro_Ingress/Composants_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/","title":"c Les r\u00e8gles Ingress","text":"","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#les-regles-ingress","title":"Les r\u00e8gles Ingress","text":"<p>Les r\u00e8gles Ingress d\u00e9finissent comment acheminer le trafic entrant vers les services Kubernetes. Ces r\u00e8gles sont configur\u00e9es dans une ressource Ingress \u00e0 l'aide d'un fichier YAML.</p> <p>Structure de base d\u2019un fichier Ingress</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: exemple-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: mon-app.mon-domaine.fr\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/un-chemin\"\n        backend:\n          service:\n            name: mon-service\n            port:\n              number: 8080\n</code></pre>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#explications","title":"Explications :","text":"<ol> <li> <p><code>metadata</code> :</p> <ul> <li><code>name</code> : Nom de la ressource Ingress.</li> <li><code>annotations</code> : Ajoute des m\u00e9tadonn\u00e9es pour configurer le comportement du contr\u00f4leur d\u2019Ingress (par exemple, r\u00e9\u00e9criture d\u2019URL avec NGINX).</li> <li> <p><code>spec</code> :</p> </li> <li> <p><code>rules</code> : Contient les r\u00e8gles de routage (bas\u00e9es sur le chemin et/ou l'h\u00f4te).</p> <ul> <li><code>host</code> : Domaine ou sous-domaine pour les r\u00e8gles (facultatif).</li> <li><code>paths</code> : D\u00e9finit les chemins \u00e0 surveiller.<ul> <li><code>pathType</code> : Type de correspondance (voir d\u00e9tails ci-dessous).</li> <li><code>backend</code> : D\u00e9finit le Service cible et le port.</li> </ul> </li> </ul> </li> </ul> </li> </ol>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#types-de-correspondance-des-chemins-pathtype","title":"Types de correspondance des chemins (<code>pathType</code>)","text":"<ol> <li> <p><code>ImplementationSpecific</code> :</p> <ul> <li>D\u00e9pend du comportement du contr\u00f4leur d\u2019Ingress.</li> <li>Utile lorsque plusieurs classes d\u2019Ingress sont utilis\u00e9es dans le m\u00eame cluster (avanc\u00e9).</li> <li> <p><code>Exact</code> :</p> </li> <li> <p>Correspond exactement au chemin URL sp\u00e9cifi\u00e9.</p> </li> <li>Sensible \u00e0 la casse.</li> <li> <p><code>Prefix</code> (le plus courant) :</p> </li> <li> <p>Correspond \u00e0 tous les chemins qui commencent par le pr\u00e9fixe sp\u00e9cifi\u00e9.</p> </li> <li>Sensible \u00e0 la casse.</li> <li>La correspondance se fait \u00e9l\u00e9ment par \u00e9l\u00e9ment.</li> </ul> </li> </ol>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#exemple","title":"Exemple :","text":"<pre><code>spec:\n  rules:\n  - http:\n      paths:\n      - pathType: Prefix\n        path: \"/service1\"\n        backend:\n          service:\n            name: service1\n            port:\n              number: 80\n      - pathType: Prefix\n        path: \"/service2\"\n        backend:\n          service:\n            name: service2\n            port:\n              number: 80\n</code></pre>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#routage-base-sur-lhote","title":"Routage bas\u00e9 sur l\u2019h\u00f4te","text":"<p>Le routage bas\u00e9 sur l\u2019h\u00f4te est utile pour h\u00e9berger plusieurs applications ou sites web sur un m\u00eame cluster Kubernetes.</p>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#exemple_1","title":"Exemple :","text":"<pre><code>spec:\n  rules:\n  - host: \"exemple1.fr\"\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: service1\n            port:\n              number: 80\n  - host: \"exemple2.fr\"\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: service2\n            port:\n              number: 80\n</code></pre>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#backend-par-defaut","title":"Backend par d\u00e9faut","text":"<p>Un backend par d\u00e9faut g\u00e8re toutes les requ\u00eates qui ne correspondent \u00e0 aucune r\u00e8gle d\u00e9finie. C'est une solution de repli pour g\u00e9rer les requ\u00eates impr\u00e9vues ou mal configur\u00e9es.</p>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#exemple_2","title":"Exemple :","text":"<pre><code>spec:\n  defaultBackend:\n    service:\n      name: default-service\n      port:\n        number: 80\n  rules:\n  - http:\n      paths:\n      - pathType: Prefix\n        path: \"/service1\"\n        backend:\n          service:\n            name: service1\n            port:\n              number: 80\n</code></pre>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#resume-des-regles-ingress","title":"R\u00e9sum\u00e9 des r\u00e8gles Ingress","text":"Aspect Description Routage bas\u00e9 sur le chemin Acheminer en fonction d\u2019un chemin URL (<code>/service1</code>, <code>/service2</code>). Routage bas\u00e9 sur l\u2019h\u00f4te Acheminer en fonction d\u2019un domaine ou sous-domaine (<code>exemple1.fr</code>, <code>exemple2.fr</code>). Backend par d\u00e9faut Service de repli pour les requ\u00eates non correspondantes. Annotations Configurer des comportements sp\u00e9cifiques (ex. : r\u00e9\u00e9criture d'URL avec <code>nginx.ingress.kubernetes.io/rewrite-target</code>).","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/c_Les_r%C3%A8gles_Ingress/#commandes-utiles","title":"Commandes utiles","text":"<ol> <li> <p>Cr\u00e9er ou appliquer un fichier Ingress :</p> <p>bash</p> <p><code>kubectl apply -f mon-ingress.yaml</code></p> </li> <li> <p>Lister les Ingress dans le cluster :</p> <p>bash</p> <p><code>kubectl get ingress</code></p> </li> <li> <p>D\u00e9tailler un Ingress :</p> <p>bash</p> <p><code>kubectl describe ingress &lt;nom-ingress&gt;</code></p> </li> </ol>","tags":["#Intro_Ingress/R\u00e8gle_Ingress"]},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/","title":"d Utiliser un Ingress avec Minikube","text":""},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#activer-un-controleur-ingress-avec-minikube","title":"Activer un contr\u00f4leur Ingress avec Minikube","text":"<p>Minikube permet de tester un Ingress localement en activant les add-ons Ingress. Ces modules utilisent le contr\u00f4leur NGINX-Ingress pr\u00e9configur\u00e9 pour Minikube.</p>"},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#etapes-pour-activer-le-controleur-ingress","title":"\u00c9tapes pour activer le contr\u00f4leur Ingress","text":"<ol> <li> <p>Activer les modules n\u00e9cessaires :</p> <p>bash</p> <p><code>minikube addons enable ingress minikube addons enable ingress-dns</code></p> </li> <li> <p>V\u00e9rifier le d\u00e9ploiement du contr\u00f4leur :</p> <p>bash</p> <p><code>kubectl get pods -n ingress-nginx</code></p> <ul> <li>Cette commande affiche les Pods d\u00e9ploy\u00e9s dans le namespace <code>ingress-nginx</code>, o\u00f9 le contr\u00f4leur est h\u00e9berg\u00e9.</li> </ul> </li> </ol>"},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#creation-dune-ressource-ingress","title":"Cr\u00e9ation d\u2019une ressource Ingress","text":"<p>Fichier YAML <code>mon-ingress.yaml</code> :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: mon-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: k8c4-service\n            port:\n              number: 80\n</code></pre> <p>Explications des champs :</p> <ul> <li><code>metadata &gt; annotations</code> :<ul> <li><code>nginx.ingress.kubernetes.io/rewrite-target: /</code> : R\u00e9\u00e9crit les URLs entrantes pour qu\u2019elles commencent \u00e0 la racine (<code>/</code>) avant d\u2019\u00eatre redirig\u00e9es vers le backend.</li> </ul> </li> <li><code>spec &gt; rules</code> :<ul> <li><code>path</code> : Toutes les requ\u00eates commen\u00e7ant par <code>/</code> sont redirig\u00e9es.</li> <li><code>backend &gt; service &gt; name</code> : Sp\u00e9cifie le Service Kubernetes (<code>k8c4-service</code>) cible.</li> <li><code>port &gt; number</code> : Port du Service backend (80).</li> </ul> </li> </ul>"},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#deployer-lingress","title":"D\u00e9ployer l\u2019Ingress","text":"<ol> <li> <p>Cr\u00e9er la ressource Ingress :</p> <p>bash</p> <p><code>kubectl apply -f mon-ingress.yaml</code></p> </li> <li> <p>Ouvrir un tunnel pour acc\u00e9der au cluster localement :</p> <p>bash</p> <p><code>minikube tunnel</code></p> </li> <li> <p>Tester l\u2019acc\u00e8s dans un navigateur :</p> <ul> <li>Acc\u00e9dez \u00e0 : http://127.0.0.1/</li> </ul> </li> </ol>"},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#commandes-utiles","title":"Commandes utiles","text":"<ol> <li> <p>V\u00e9rifier l\u2019\u00e9tat de l\u2019Ingress :</p> <p>bash</p> <p><code>kubectl get ingress</code></p> </li> <li> <p>D\u00e9tailler les configurations d\u2019un Ingress :</p> <p>bash</p> <p><code>kubectl describe ingress mon-ingress</code></p> </li> <li> <p>V\u00e9rifier les Pods du contr\u00f4leur NGINX :</p> <p>bash</p> <p><code>kubectl get pods -n ingress-nginx</code></p> </li> </ol>"},{"location":"Chap_5_Introduction_Aux_Ingress/d_Utiliser_un_Ingress_avec_Minikube/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Minikube facilite le test des Ingress localement avec le contr\u00f4leur NGINX-Ingress.</li> <li>Le tunnel Minikube permet de rediriger les requ\u00eates locales vers le cluster Kubernetes.</li> <li>L\u2019Ingress YAML simplifie le routage vers les Services backend en d\u00e9finissant des r\u00e8gles claires.</li> </ul>"},{"location":"Chap_7_Les_sondes_Probs/Les_Sondes_%28probs%29/","title":"Les Sondes (probs)","text":"<ul> <li>Introduction aux sondes</li> <li>Configurer une seconde vitalit\u00e9(liveness probe)</li> <li>Configurer une sonde de d\u00e9marrage (startup probe)</li> <li>Configurer une sonde de pr\u00e9paration (readiness probe)</li> <li>Utiliser d'autres sondes (TCP, exec, gRPC)</li> </ul>"},{"location":"Chap_7_Les_sondes_Probs/Les_Sondes_probs/","title":"Les Sondes probs","text":"<p>[[a) Introduction aux sondes]]</p> <p>[[b) Configurer une seconde vitalit\u00e9 (liveness probe)]]</p> <p>[[c) Configurer une sonde de d\u00e9marrage (startup probe)]]</p> <p>[[d) Configurer une sonde de pr\u00e9paration (readiness probe)]]</p> <p>[[e) Utiliser d'autre sondes (TCP, exec, gRPC)]]</p>"},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/","title":"a Introduction aux sondes","text":"","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#les-types-de-sondes-probes-dans-kubernetes","title":"Les types de sondes (Probes) dans Kubernetes","text":"<p>Les Probes sont des m\u00e9canismes utilis\u00e9s par Kubernetes pour surveiller l'\u00e9tat des conteneurs au sein d'un Pod. Il existe trois types principaux de sondes :</p>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#1-liveness-probes","title":"1. Liveness Probes","text":"<ul> <li>Objectif : D\u00e9tecter si un conteneur est \"mort\" ou bloqu\u00e9 et n\u00e9cessitant un red\u00e9marrage.</li> <li>Cas d\u2019usage : Red\u00e9marrer un conteneur pour am\u00e9liorer la disponibilit\u00e9, m\u00eame en cas de bugs.</li> <li>Risques : Une mauvaise configuration peut entra\u00eener des \u00e9checs en cascade.</li> </ul>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#2-readiness-probes","title":"2. Readiness Probes","text":"<ul> <li>Objectif : D\u00e9terminer si un conteneur est pr\u00eat \u00e0 recevoir du trafic.</li> <li>Cas d\u2019usage :<ul> <li>G\u00e9rer la disponibilit\u00e9 des Pods dans un Service.</li> <li>Retirer temporairement un Pod des \u00e9quilibreurs de charge s'il n'est pas pr\u00eat.</li> </ul> </li> <li>Condition : Tous les conteneurs d\u2019un Pod doivent \u00eatre pr\u00eats pour que le Pod soit consid\u00e9r\u00e9 comme pr\u00eat.</li> </ul>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#3-startup-probes","title":"3. Startup Probes","text":"<ul> <li>Objectif : V\u00e9rifier si une application conteneuris\u00e9e a bien d\u00e9marr\u00e9.</li> <li>Cas d\u2019usage :<ul> <li>G\u00e9rer les applications ayant des temps de d\u00e9marrage longs.</li> <li>Suspendre les sondes de liveness et readiness tant que la startup probe n\u2019a pas r\u00e9ussi.</li> </ul> </li> <li>Avantage : \u00c9vite de tuer des conteneurs en cours de d\u00e9marrage.</li> </ul>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#configuration-des-sondes","title":"Configuration des sondes","text":"<p>Toutes les sondes partagent les m\u00eames param\u00e8tres de configuration. Voici un aper\u00e7u des param\u00e8tres les plus importants :</p> Param\u00e8tre Description Valeur par d\u00e9faut <code>initialDelaySeconds</code> Temps en secondes avant de d\u00e9marrer les sondes apr\u00e8s le lancement du conteneur. 0 secondes <code>periodSeconds</code> Fr\u00e9quence des v\u00e9rifications en secondes. 10 secondes <code>timeoutSeconds</code> Temps maximum d\u2019attente d\u2019une r\u00e9ponse avant de consid\u00e9rer que la sonde a \u00e9chou\u00e9. 1 seconde <code>successThreshold</code> Nombre de succ\u00e8s cons\u00e9cutifs n\u00e9cessaires pour consid\u00e9rer la sonde comme r\u00e9ussie. (Applicable uniquement aux readiness.) 1 <code>failureThreshold</code> Nombre d\u2019\u00e9checs cons\u00e9cutifs avant que la sonde soit consid\u00e9r\u00e9e comme \u00e9chou\u00e9e. 3 <code>terminationGracePeriodSeconds</code> Temps d'attente avant d'arr\u00eater de force un conteneur d\u00e9faillant (SIGKILL). 30 secondes (Pod)","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#exemple-de-configuration-dun-fichier-yaml","title":"Exemple de configuration d\u2019un fichier YAML","text":"","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#liveness-probe","title":"Liveness Probe","text":"<pre><code>livenessProbe:\n  httpGet:\n    path: /healthz\n    port: 8080\n  initialDelaySeconds: 3\n  periodSeconds: 5\n</code></pre>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#readiness-probe","title":"Readiness Probe","text":"<p>yaml</p> <pre><code>readinessProbe:\n  exec:\n    command:\n    - cat\n    - /tmp/ready\n  initialDelaySeconds: 5\n  periodSeconds: 10\n</code></pre>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#startup-probe","title":"Startup Probe","text":"<p>yaml</p> <pre><code>startupProbe:\n  tcpSocket:\n    port: 8080\n  initialDelaySeconds: 10\n  periodSeconds: 10\n  failureThreshold: 30\n</code></pre>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#impact-de-la-configuration","title":"Impact de la configuration","text":"<ol> <li> <p>Pour les sondes de liveness et readiness :</p> <ul> <li>\u00c9checs r\u00e9p\u00e9t\u00e9s (selon <code>failureThreshold</code>) :<ul> <li>Liveness : red\u00e9marre le conteneur.</li> <li>Readiness : retire temporairement le Pod des \u00e9quilibreurs de charge, mais le conteneur reste en cours d\u2019ex\u00e9cution.</li> </ul> </li> <li> <p>Pour la startup probe :</p> </li> <li> <p>Liveness et readiness sont suspendues tant que la startup probe n\u2019a pas r\u00e9ussi.</p> </li> <li> <p>Avec <code>terminationGracePeriodSeconds</code> :</p> </li> <li> <p>Fournit du temps au conteneur pour effectuer un arr\u00eat propre (ex. : sauvegarder les donn\u00e9es, fermer les connexions).</p> </li> </ul> </li> </ol>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/a_Introduction_aux_sondes/#resume","title":"R\u00e9sum\u00e9","text":"Type de sonde Objectif Impact en cas d\u2019\u00e9chec Liveness D\u00e9tecter si un conteneur est bloqu\u00e9 ou mort. Red\u00e9marrage automatique du conteneur. Readiness V\u00e9rifier si un conteneur est pr\u00eat \u00e0 recevoir du trafic. Le Pod est retir\u00e9 des \u00e9quilibreurs de charge. Startup V\u00e9rifier si l\u2019application a correctement d\u00e9marr\u00e9. Suspend liveness/readiness jusqu\u2019au succ\u00e8s. <p>Ces sondes permettent une meilleure r\u00e9silience des applications, mais n\u00e9cessitent une configuration soigneuse pour \u00e9viter des comportements ind\u00e9sirables.</p>","tags":["#Intro_Sondes/Introduction_aux_sondes"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/","title":"b Configurer une seconde vitalit\u00e9 liveness probe","text":"","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#creation-dun-deploiement-avec-une-sonde-liveness","title":"Cr\u00e9ation d'un d\u00e9ploiement avec une sonde Liveness","text":"<p>Les sondes Liveness dans Kubernetes sont utilis\u00e9es pour d\u00e9tecter si un conteneur est bloqu\u00e9 ou non fonctionnel. En cas d'\u00e9chec, Kubernetes red\u00e9marre le conteneur.</p>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#exemple-de-configuration-non-fonctionnelle","title":"Exemple de configuration non fonctionnelle","text":"<p>Cr\u00e9ez un fichier <code>mon-deploiement.yaml</code> avec une sonde Liveness mal configur\u00e9e :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx-container\n        image: dymafr/k8c4\n        ports:\n        - containerPort: 80\n        livenessProbe:\n          httpGet:\n            path: /test.html\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          failureThreshold: 1\n          successThreshold: 1\n          timeoutSeconds: 1\n</code></pre>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#explications","title":"Explications :","text":"<ul> <li>La sonde effectue une requ\u00eate HTTP GET sur <code>/test.html</code>.</li> <li>Comme ce chemin n'existe pas dans l'application, la sonde \u00e9choue syst\u00e9matiquement, entra\u00eenant des red\u00e9marrages du conteneur.</li> </ul>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#resultats-observes","title":"R\u00e9sultats observ\u00e9s","text":"<ol> <li> <p>V\u00e9rification des Pods :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl get pods</code></p> <p>Exemple de sortie :</p> <p>plaintext</p> <p>Copier le code</p> <p><code>NAME                                READY   STATUS             RESTARTS      AGE nginx-deployment-6f68c7c7c5-hpgkz   0/1     CrashLoopBackOff   6 (6s ago)    3m45s</code></p> </li> <li> <p>Message d'erreur dans le dashboard Minikube :</p> <ul> <li>\u00c9tat : <code>CrashLoopBackOff</code></li> <li>\u00c9chec de la sonde : <code>Liveness probe failed: HTTP probe failed with statuscode: 404</code></li> <li> <p>Cycle des \u00e9v\u00e9nements :</p> </li> <li> <p>Le conteneur est d\u00e9marr\u00e9.</p> </li> <li>La sonde Liveness \u00e9choue.</li> <li>Kubernetes tue le conteneur et tente de le red\u00e9marrer.</li> </ul> </li> </ol>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#correction-et-configuration-fonctionnelle","title":"Correction et configuration fonctionnelle","text":"<p>Modifiez le fichier YAML pour utiliser un chemin existant (<code>/index.html</code>) :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx-container\n        image: dymafr/k8c4\n        ports:\n        - containerPort: 80\n        livenessProbe:\n          httpGet:\n            path: /index.html\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          failureThreshold: 1\n          successThreshold: 1\n          timeoutSeconds: 1\n</code></pre> <ol> <li> <p>Appliquer les modifications :</p> <p>bash</p> <p><code>kubectl apply -f mon-deploiement.yaml</code></p> </li> <li> <p>V\u00e9rifier les Pods :</p> <p>bash</p> <p><code>kubectl get pods</code></p> <p>Les Pods sont d\u00e9sormais dans l'\u00e9tat <code>Running</code>.</p> </li> </ol>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#parametres-pour-les-sondes-http-httpget","title":"Param\u00e8tres pour les sondes HTTP (<code>httpGet</code>)","text":"Param\u00e8tre Description Valeur par d\u00e9faut <code>path</code> Chemin pour effectuer la requ\u00eate HTTP. <code>/</code> <code>port</code> Port sur lequel la requ\u00eate est envoy\u00e9e. Obligatoire <code>scheme</code> Sch\u00e9ma utilis\u00e9 pour la requ\u00eate (<code>HTTP</code> ou <code>HTTPS</code>). <code>HTTP</code> <code>httpHeaders</code> En-t\u00eates personnalis\u00e9s \u00e0 inclure dans la requ\u00eate. Aucune <code>host</code> Nom de l'h\u00f4te auquel se connecter. Par d\u00e9faut, l'IP du Pod est utilis\u00e9e (g\u00e9n\u00e9ralement inutile). IP du Pod","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#details-des-sondes-http","title":"D\u00e9tails des sondes HTTP","text":"<ol> <li> <p>Codes de r\u00e9ponse consid\u00e9r\u00e9s comme un succ\u00e8s :</p> <ul> <li>Tout code compris entre 200 et 399.</li> <li> <p>En-t\u00eates envoy\u00e9s par d\u00e9faut :</p> </li> <li> <p><code>User-Agent</code> : <code>kube-probe/&lt;version&gt;</code> (ex. : <code>kube-probe/1.27</code>).</p> </li> <li><code>Accept</code> : <code>*/*</code>.</li> <li> <p>Sonde HTTPS :</p> </li> <li> <p>Si <code>scheme</code> est d\u00e9fini sur <code>HTTPS</code>, le kubelet ignore la v\u00e9rification du certificat SSL.</p> </li> </ul> </li> </ol>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/b_Configurer_une_seconde_vitalit%C3%A9_liveness_probe/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>Les sondes Liveness permettent de red\u00e9marrer un conteneur non fonctionnel.</li> <li>Les sondes HTTP utilisent des requ\u00eates GET pour v\u00e9rifier l\u2019\u00e9tat d\u2019un conteneur.</li> <li>Une mauvaise configuration peut provoquer des red\u00e9marrages r\u00e9p\u00e9t\u00e9s (CrashLoopBackOff).</li> <li>En cas de d\u00e9marrage lent, envisagez une Startup Probe pour \u00e9viter des red\u00e9marrages intempestifs.</li> </ul>","tags":["#Intro_Sondes/Config_sonde_de_vitalit\u00e9"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/","title":"c Configurer une sonde de d\u00e9marrage startup probe","text":"","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#les-sondes-de-demarrage-startup-probes","title":"Les sondes de d\u00e9marrage (Startup Probes)","text":"<p>Les startup probes permettent de v\u00e9rifier si une application conteneuris\u00e9e a correctement d\u00e9marr\u00e9, notamment pour les applications qui n\u00e9cessitent un temps de d\u00e9marrage prolong\u00e9. Elles \u00e9vitent que des sondes Liveness ou Readiness ne red\u00e9marrent ou d\u00e9clarent l'application d\u00e9faillante pendant sa phase d'initialisation.</p>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#quand-utiliser-une-startup-probe","title":"Quand utiliser une startup probe ?","text":"<ul> <li>Applications lentes \u00e0 d\u00e9marrer :<ul> <li>Par exemple, des applications Java ou celles n\u00e9cessitant une initialisation complexe (connexion \u00e0 une base de donn\u00e9es, chargement de fichiers volumineux, etc.).</li> </ul> </li> <li>Probl\u00e8mes de red\u00e9marrages infinis :<ul> <li>Une Liveness Probe mal configur\u00e9e peut consid\u00e9rer une application comme d\u00e9faillante alors qu'elle est en cours de d\u00e9marrage, entra\u00eenant un cycle de red\u00e9marrages.</li> </ul> </li> </ul>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#caracteristiques-des-startup-probes","title":"Caract\u00e9ristiques des startup probes","text":"<ul> <li>D\u00e9sactivent les sondes Liveness et Readiness jusqu\u2019\u00e0 ce qu\u2019elles r\u00e9ussissent.</li> <li>Fournissent une p\u00e9riode de gr\u00e2ce pour les applications lentes \u00e0 d\u00e9marrer.</li> <li>\u00c9chec configur\u00e9 via un seuil (<code>failureThreshold</code>).</li> </ul> <p>Exemple de configuration compl\u00e8te </p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: mon-application\nspec:\n  containers:\n  - name: mon-application\n    image: mon-image\n    livenessProbe:\n      httpGet:\n        path: /health\n        port: 8080\n      initialDelaySeconds: 60\n      periodSeconds: 10\n    readinessProbe:\n      httpGet:\n        path: /ready\n        port: 8080\n      initialDelaySeconds: 30\n      periodSeconds: 5\n    startupProbe:\n      httpGet:\n        path: /health\n        port: 8080\n      failureThreshold: 30\n      periodSeconds: 10\n</code></pre>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#explication-des-champs","title":"Explication des champs","text":"<ol> <li> <p><code>startupProbe</code> :</p> <ul> <li><code>httpGet</code> : La sonde effectue une requ\u00eate HTTP GET sur <code>/health</code>.</li> <li><code>failureThreshold</code> : Le nombre d'\u00e9checs cons\u00e9cutifs avant de consid\u00e9rer que le conteneur n'a pas d\u00e9marr\u00e9. Ici, apr\u00e8s 30 \u00e9checs cons\u00e9cutifs (5 minutes), Kubernetes consid\u00e8re l'application comme d\u00e9faillante.</li> <li><code>periodSeconds</code> : Intervalle entre les sondes (10 secondes dans cet exemple).</li> <li> <p><code>livenessProbe</code> :</p> </li> <li> <p>Utilis\u00e9e pour v\u00e9rifier que l\u2019application reste op\u00e9rationnelle apr\u00e8s son d\u00e9marrage.</p> </li> <li>Configur\u00e9e pour commencer 60 secondes apr\u00e8s le d\u00e9marrage du conteneur.</li> <li> <p><code>readinessProbe</code> :</p> </li> <li> <p>D\u00e9termine si le conteneur est pr\u00eat \u00e0 accepter du trafic.</p> </li> <li>Configur\u00e9e pour commencer 30 secondes apr\u00e8s le d\u00e9marrage du conteneur.</li> </ul> </li> </ol>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#cycle-des-sondes-avec-une-startup-probe","title":"Cycle des sondes avec une startup probe","text":"<ol> <li> <p>Phase de d\u00e9marrage :</p> <ul> <li>Kubernetes ex\u00e9cute uniquement la Startup Probe.</li> <li>Les sondes Liveness et Readiness sont ignor\u00e9es.</li> <li> <p>Une fois que la startup probe r\u00e9ussit :</p> </li> <li> <p>La sonde Liveness surveille la sant\u00e9 g\u00e9n\u00e9rale du conteneur.</p> </li> <li>La sonde Readiness v\u00e9rifie si le Pod est pr\u00eat \u00e0 recevoir du trafic.</li> <li> <p>En cas d'\u00e9chec de la startup probe :</p> </li> <li> <p>Kubernetes consid\u00e8re que le conteneur a \u00e9chou\u00e9 \u00e0 d\u00e9marrer et peut tenter de le red\u00e9marrer selon la politique de red\u00e9marrage du Pod.</p> </li> </ul> </li> </ol>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ul> <li>D\u00e9finir <code>failureThreshold</code> et <code>periodSeconds</code> avec soin :<ul> <li>Adaptez ces valeurs au temps n\u00e9cessaire pour que l'application d\u00e9marre.</li> </ul> </li> <li>Ne pas utiliser de startup probe pour des applications d\u00e9marrant rapidement :<ul> <li>Cela alourdit inutilement la configuration et peut retarder l\u2019activation des sondes Liveness et Readiness.</li> </ul> </li> </ul>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#resume-des-sondes","title":"R\u00e9sum\u00e9 des sondes","text":"Sonde Objectif D\u00e9clenchement Startup V\u00e9rifie que l'application a correctement d\u00e9marr\u00e9. Avant Liveness/Readiness Liveness V\u00e9rifie que l'application est toujours fonctionnelle. Apr\u00e8s succ\u00e8s de Startup Readiness V\u00e9rifie que l'application est pr\u00eate \u00e0 recevoir du trafic. Apr\u00e8s succ\u00e8s de Startup","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/c_Configurer_une_sonde_de_d%C3%A9marrage_startup_probe/#commandes-utiles","title":"Commandes utiles","text":"<ol> <li> <p>Appliquer une configuration YAML contenant une startup probe :</p> <p>bash</p> <p><code>kubectl apply -f mon-pod.yaml</code></p> </li> <li> <p>V\u00e9rifier l\u2019\u00e9tat du Pod :</p> <p>bash</p> <p><code>kubectl get pods</code></p> </li> <li> <p>Voir les d\u00e9tails des sondes dans un Pod :</p> <p>bash</p> <p><code>kubectl describe pod mon-application</code></p> </li> </ol>","tags":["#Intro_Sondes/Config_une_sonde_de_preparation"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/","title":"d Configurer une sonde de pr\u00e9paration readiness probe","text":"","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#les-sondes-de-preparation-readiness-probes","title":"Les sondes de pr\u00e9paration (Readiness Probes)","text":"<p>Les readiness probes dans Kubernetes sont utilis\u00e9es pour indiquer si un conteneur est pr\u00eat \u00e0 recevoir du trafic. Elles permettent de g\u00e9rer la disponibilit\u00e9 des Pods au sein d\u2019un Service Kubernetes.</p>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#fonctionnement","title":"Fonctionnement","text":"<ul> <li>Succ\u00e8s de la sonde :<ul> <li>Kubernetes commence \u00e0 diriger le trafic vers le conteneur.</li> </ul> </li> <li>\u00c9chec de la sonde :<ul> <li>Kubernetes cesse de diriger le trafic vers le conteneur jusqu\u2019\u00e0 ce que la sonde r\u00e9ussisse \u00e0 nouveau.</li> </ul> </li> </ul> <p>Cela est particuli\u00e8rement utile pour :</p> <ul> <li>Les applications n\u00e9cessitant un temps d\u2019initialisation avant de devenir disponibles.</li> <li>Les applications temporairement indisponibles pendant leur ex\u00e9cution (ex. : maintenance, mises \u00e0 jour).</li> </ul>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#exemple-pratique","title":"Exemple pratique","text":"","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#configuration-yaml-dun-pod-avec-une-readiness-probe","title":"Configuration YAML d\u2019un Pod avec une readiness probe :","text":"<pre><code>apiVersion: v1\nkind: Pod\nmetadata:\n  name: mon-application\nspec:\n  containers:\n  - name: mon-application\n    image: mon-image\n    readinessProbe:\n      httpGet:\n        path: /ready\n        port: 8080\n      initialDelaySeconds: 30\n      periodSeconds: 10\n</code></pre>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#explications-des-champs","title":"Explications des champs :","text":"<ul> <li> <p><code>httpGet</code> :</p> <ul> <li>Effectue une requ\u00eate HTTP sur le chemin <code>/ready</code> pour v\u00e9rifier la disponibilit\u00e9.</li> <li>Redirige le trafic uniquement si cette requ\u00eate r\u00e9ussit.</li> <li> <p><code>initialDelaySeconds</code> :</p> </li> <li> <p>D\u00e9lai avant d\u2019ex\u00e9cuter la premi\u00e8re sonde (30 secondes ici).</p> </li> <li> <p><code>periodSeconds</code> :</p> </li> <li> <p>Fr\u00e9quence d\u2019ex\u00e9cution des sondes apr\u00e8s la premi\u00e8re tentative (toutes les 10 secondes ici).</p> </li> </ul> </li> </ul>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#cas-dutilisation","title":"Cas d\u2019utilisation","text":"<ol> <li> <p>Application n\u00e9cessitant un temps d\u2019initialisation :</p> <ul> <li>Exemple : Une application qui charge des donn\u00e9es volumineuses en m\u00e9moire au d\u00e9marrage.</li> <li>La readiness probe s\u2019assure que l\u2019application est pleinement op\u00e9rationnelle avant de recevoir des requ\u00eates.</li> <li> <p>Application temporairement indisponible :</p> </li> <li> <p>Exemple : Une application effectuant une mise \u00e0 jour de la base de donn\u00e9es qui la rend indisponible temporairement.</p> </li> <li>La readiness probe signale l\u2019indisponibilit\u00e9 \u00e0 Kubernetes, qui cesse de diriger le trafic jusqu\u2019\u00e0 ce que la sonde r\u00e9ussisse \u00e0 nouveau.</li> </ul> </li> </ol>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#commandes-utiles","title":"Commandes utiles","text":"<ol> <li> <p>Cr\u00e9er ou mettre \u00e0 jour une ressource avec readiness probe :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl apply -f mon-pod.yaml</code></p> </li> <li> <p>V\u00e9rifier l\u2019\u00e9tat des Pods :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl get pods</code></p> </li> <li> <p>Afficher les d\u00e9tails des sondes pour un Pod :</p> <p>bash</p> <p>Copier le code</p> <p><code>kubectl describe pod mon-application</code></p> </li> </ol>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/d_Configurer_une_sonde_de_pr%C3%A9paration_readiness_probe/#resume-des-sondes-de-preparation","title":"R\u00e9sum\u00e9 des sondes de pr\u00e9paration","text":"Aspect Description Objectif V\u00e9rifier si un conteneur est pr\u00eat \u00e0 recevoir du trafic. Succ\u00e8s de la sonde Kubernetes commence \u00e0 rediriger le trafic vers le conteneur. \u00c9chec de la sonde Kubernetes cesse temporairement de diriger le trafic vers le conteneur jusqu\u2019\u00e0 nouvel ordre. Cas d\u2019utilisation Initialisation lente, maintenance ou indisponibilit\u00e9 temporaire de l\u2019application. <p>Les readiness probes jouent un r\u00f4le cl\u00e9 dans la gestion de la disponibilit\u00e9 des applications Kubernetes, assurant une meilleure r\u00e9silience et une exp\u00e9rience utilisateur optimis\u00e9e.</p>","tags":["#Intro_Sondes/readiness_probe"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/","title":"e Utiliser d'autre sondes TCP, exec, gRPC","text":"","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#les-types-de-sondes-supplementaires-dans-kubernetes","title":"Les types de sondes suppl\u00e9mentaires dans Kubernetes","text":"<p>En plus des sondes HTTP (httpGet), Kubernetes propose trois autres types pour surveiller l'\u00e9tat des conteneurs : exec, tcpSocket, et gRPC.</p>","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#1-la-sonde-exec","title":"1. La sonde exec","text":"<ul> <li> <p>Principe :</p> <ul> <li>Ex\u00e9cute une commande dans le conteneur.</li> <li>Si la commande retourne un code de sortie 0, la sonde est consid\u00e9r\u00e9e comme r\u00e9ussie.</li> <li> <p>Cas d\u2019usage :</p> </li> <li> <p>V\u00e9rification de l\u2019\u00e9tat d\u2019un fichier, d\u2019un processus ou d\u2019un script personnalis\u00e9.</p> </li> <li> <p>Exemple YAML :</p> <p>apiVersion: v1 kind: Pod metadata:   name: mon-application spec:   containers:   - name: mon-application     image: mon-image     livenessProbe:       exec:         command:         - cat         - /tmp/is_alive       initialDelaySeconds: 5       periodSeconds: 5</p> </li> </ul> </li> <li> <ul> <li>Explications :         - La commande <code>cat /tmp/is_alive</code> est ex\u00e9cut\u00e9e toutes les 5 secondes.         - Si le fichier <code>/tmp/is_alive</code> existe, la sonde r\u00e9ussit.</li> </ul> </li> </ul>","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#2-la-sonde-tcpsocket","title":"2. La sonde tcpSocket","text":"<ul> <li> <p>Principe :</p> <ul> <li>Tente d\u2019\u00e9tablir une connexion TCP sur un port sp\u00e9cifi\u00e9.</li> <li>Si la connexion est r\u00e9ussie, la sonde est consid\u00e9r\u00e9e comme r\u00e9ussie.</li> <li> <p>Cas d\u2019usage :</p> </li> <li> <p>V\u00e9rification de la disponibilit\u00e9 des services qui n'ont pas de point d'entr\u00e9e HTTP.</p> </li> <li> <p>Exemple YAML :</p> <p>apiVersion: v1 kind: Pod metadata:   name: mon-application spec:   containers:   - name: mon-application     image: mon-image     readinessProbe:       tcpSocket:         port: 8080       initialDelaySeconds: 5       periodSeconds: 10</p> </li> </ul> </li> <li> <ul> <li>Explications :         - Kubernetes tente une connexion TCP sur le port <code>8080</code> toutes les 10 secondes.         - Si la connexion est r\u00e9ussie, Kubernetes consid\u00e8re le conteneur comme pr\u00eat.</li> </ul> </li> </ul>","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#3-la-sonde-grpc","title":"3. La sonde gRPC","text":"<ul> <li> <p>Principe :</p> <ul> <li>Utilise le protocole gRPC pour effectuer des contr\u00f4les de sant\u00e9 sur des services gRPC.</li> <li>La sonde v\u00e9rifie si le port gRPC est op\u00e9rationnel.</li> <li> <p>Cas d\u2019usage :</p> </li> <li> <p>Applications utilisant le protocole gRPC.</p> </li> <li> <p>Exemple YAML :</p> <p>apiVersion: v1 kind: Pod metadata:   name: etcd-with-grpc spec:   containers:   - name: etcd     image: registry.k8s.io/etcd:3.5.1-0     command: [ \"/usr/local/bin/etcd\", \"--data-dir\",  \"/var/lib/etcd\", \"--listen-client-urls\", \"http://0.0.0.0:2379\", \"--advertise-client-urls\", \"http://127.0.0.1:2379\", \"--log-level\", \"debug\"]     ports:     - containerPort: 2379     livenessProbe:       grpc:         port: 2379       initialDelaySeconds: 10</p> </li> </ul> </li> <li> <ul> <li>Explications :         - La sonde v\u00e9rifie si le port <code>2379</code> est accessible via gRPC.         - Si l\u2019application gRPC (ici <code>etcd</code>) r\u00e9pond, la sonde r\u00e9ussit.</li> </ul> </li> </ul>","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#resume-des-sondes","title":"R\u00e9sum\u00e9 des sondes","text":"Type de sonde Principe Cas d\u2019usage exec Ex\u00e9cute une commande dans le conteneur. V\u00e9rifications internes sp\u00e9cifiques (ex. : fichiers, scripts). tcpSocket Tente une connexion TCP sur un port. V\u00e9rification d\u2019un service r\u00e9seau sans HTTP. gRPC Utilise le protocole gRPC pour tester un port ou une m\u00e9thode gRPC. Applications gRPC.","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]},{"location":"Chap_7_Les_sondes_Probs/e_Utiliser_d%27autre_sondes_TCP%2C_exec%2C_gRPC/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ol> <li> <p>Choix de la sonde :</p> <ul> <li>Utilisez httpGet pour les services HTTP/HTTPS.</li> <li>Pr\u00e9f\u00e9rez exec pour les v\u00e9rifications sp\u00e9cifiques \u00e0 l\u2019application.</li> <li>Utilisez tcpSocket si le service n\u2019expose pas d\u2019interface HTTP.</li> <li>gRPC est r\u00e9serv\u00e9 aux applications utilisant ce protocole.</li> <li> <p>Configuration minutieuse :</p> </li> <li> <p>Ajustez <code>initialDelaySeconds</code>, <code>periodSeconds</code>, et <code>failureThreshold</code> selon les besoins sp\u00e9cifiques de votre application.</p> </li> <li>Testez les sondes sur un environnement local avant de les d\u00e9ployer en production.</li> <li> <p>Sondes multiples :</p> </li> <li> <p>Combinez diff\u00e9rents types de sondes (ex. : readiness avec httpGet et liveness avec exec) pour maximiser la couverture.</p> </li> </ul> </li> </ol>","tags":["#Intro_Sondes/Utilisation_d_autre_sondes"]}]}